{
	"id": "e358a72793b3c6debf690e263375d109",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"donation.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface IGraceToken {\r\n    function mint(address to, uint256 amount) external;\r\n}\r\n\r\ncontract GraceDonation is Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address payable public treasuryWallet;\r\n    IGraceToken public graceToken;\r\n    IERC20 public usdtToken;\r\n    uint256 public constant EXCHANGE_RATE = 0.1 ether; // 0.1 GRACE per 1 USDT/POL\r\n    uint256 public totalDonated;\r\n    \r\n    // Milestone levels (in USDT/POL, assuming 18 decimals for POL, 6 for USDT)\r\n    uint256[] public milestones = [\r\n        1000 * 10**6,    // 1,000 USDT/POL\r\n        5000 * 10**6,    // 5,000\r\n        10000 * 10**6,   // 10,000\r\n        50000 * 10**6    // 50,000\r\n    ];\r\n    uint256 public currentMilestone;\r\n\r\n    event DonatedPOL(address indexed donor, uint256 amount, uint256 graceMinted, uint256 newTotal);\r\n    event DonatedUSDT(address indexed donor, uint256 amount, uint256 graceMinted, uint256 newTotal);\r\n    event MilestoneReached(uint256 milestoneAmount, uint256 milestoneIndex);\r\n\r\n    constructor(\r\n        address payable _treasuryWallet,\r\n        address _graceToken,\r\n        address _usdtToken,\r\n        address initialOwner\r\n    ) Ownable(initialOwner) {\r\n        require(_treasuryWallet != address(0), \"Invalid treasury wallet\");\r\n        require(_graceToken != address(0), \"Invalid token address\");\r\n        require(_usdtToken != address(0), \"Invalid USDT address\");\r\n        \r\n        treasuryWallet = _treasuryWallet;\r\n        graceToken = IGraceToken(_graceToken);\r\n        usdtToken = IERC20(_usdtToken);\r\n    }\r\n\r\n    function donatePOL() external payable {\r\n        require(msg.value > 0, \"Zero donation not allowed\");\r\n\r\n        // Forward POL to treasury\r\n        (bool sent, ) = treasuryWallet.call{value: msg.value}(\"\");\r\n        require(sent, \"POL transfer failed\");\r\n\r\n        // Mint GRACE (0.1 GRACE per POL)\r\n        uint256 graceAmount = (msg.value * EXCHANGE_RATE) / 1 ether;\r\n        graceToken.mint(msg.sender, graceAmount);\r\n\r\n        // Update total donated (convert POL to 6 decimals for consistency)\r\n        totalDonated += msg.value / 10**12; // POL (18 decimals) to USDT equivalent (6 decimals)\r\n        _checkMilestone();\r\n\r\n        emit DonatedPOL(msg.sender, msg.value, graceAmount, totalDonated);\r\n    }\r\n\r\n    function donateUSDT(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n        // Transfer USDT directly to treasury\r\n        usdtToken.safeTransferFrom(msg.sender, treasuryWallet, amount);\r\n\r\n        // Mint GRACE (0.1 GRACE per USDT)\r\n          uint256 graceAmount = (amount * EXCHANGE_RATE) / (10**IERC20Metadata(address(usdtToken)).decimals());\r\n        graceToken.mint(msg.sender, graceAmount);\r\n\r\n        // Update total donated\r\n        totalDonated += amount;\r\n        _checkMilestone();\r\n\r\n        emit DonatedUSDT(msg.sender, amount, graceAmount, totalDonated);\r\n    }\r\n\r\n    function updateTreasuryWallet(address payable newWallet) external onlyOwner {\r\n        require(newWallet != address(0), \"Invalid address\");\r\n        treasuryWallet = newWallet;\r\n    }\r\n\r\n    function _checkMilestone() internal {\r\n        for (uint256 i = currentMilestone; i < milestones.length; i++) {\r\n            if (totalDonated >= milestones[i]) {\r\n                currentMilestone = i + 1;\r\n                emit MilestoneReached(milestones[i], i);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // View function to get donor's total donations\r\n    //function getDonorTotal(address donor) external view returns (uint256) {\r\n        // Note: Requires off-chain tracking or additional storage\r\n      //  return 0; // Placeholder (implement if needed)\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"donation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"donation.sol": {
				"GraceDonation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_treasuryWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_graceToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdtToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "graceMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTotal",
									"type": "uint256"
								}
							],
							"name": "DonatedPOL",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "graceMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTotal",
									"type": "uint256"
								}
							],
							"name": "DonatedUSDT",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "milestoneAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "milestoneIndex",
									"type": "uint256"
								}
							],
							"name": "MilestoneReached",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "EXCHANGE_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMilestone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donatePOL",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "donateUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "graceToken",
							"outputs": [
								{
									"internalType": "contract IGraceToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "milestones",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDonated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "updateTreasuryWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"donation.sol\":406:4002  contract GraceDonation is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"donation.sol\":838:850  1000 * 10**6 */\n  0x3b9aca00\n    /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n  0xffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"donation.sol\":882:894  5000 * 10**6 */\n  0x012a05f200\n    /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n  0xffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"donation.sol\":917:930  10000 * 10**6 */\n  0x02540be400\n    /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n  0xffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"donation.sol\":953:966  50000 * 10**6 */\n  0x0ba43b7400\n    /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n  0xffffffffff\n  and\n  dup2\n  mstore\n  pop\n  0x05\n  swap1\n  0x04\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"donation.sol\":1316:1853  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"donation.sol\":1475:1487  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"donation.sol\":1535:1536  0 */\n  0x00\n    /* \"donation.sol\":1508:1537  _treasuryWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"donation.sol\":1508:1523  _treasuryWallet */\n  dup5\n    /* \"donation.sol\":1508:1537  _treasuryWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"donation.sol\":1500:1565  require(_treasuryWallet != address(0), \"Invalid treasury wallet\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"donation.sol\":1607:1608  0 */\n  0x00\n    /* \"donation.sol\":1584:1609  _graceToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"donation.sol\":1584:1595  _graceToken */\n  dup4\n    /* \"donation.sol\":1584:1609  _graceToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"donation.sol\":1576:1635  require(_graceToken != address(0), \"Invalid token address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"donation.sol\":1676:1677  0 */\n  0x00\n    /* \"donation.sol\":1654:1678  _usdtToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"donation.sol\":1654:1664  _usdtToken */\n  dup3\n    /* \"donation.sol\":1654:1678  _usdtToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"donation.sol\":1646:1703  require(_usdtToken != address(0), \"Invalid USDT address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"donation.sol\":1741:1756  _treasuryWallet */\n  dup4\n    /* \"donation.sol\":1724:1738  treasuryWallet */\n  0x01\n  0x00\n    /* \"donation.sol\":1724:1756  treasuryWallet = _treasuryWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"donation.sol\":1792:1803  _graceToken */\n  dup3\n    /* \"donation.sol\":1767:1777  graceToken */\n  0x02\n  0x00\n    /* \"donation.sol\":1767:1804  graceToken = IGraceToken(_graceToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"donation.sol\":1834:1844  _usdtToken */\n  dup2\n    /* \"donation.sol\":1815:1824  usdtToken */\n  0x03\n  0x00\n    /* \"donation.sol\":1815:1845  usdtToken = IERC20(_usdtToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"donation.sol\":1316:1853  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"donation.sol\":406:4002  contract GraceDonation is Ownable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"donation.sol\":406:4002  contract GraceDonation is Ownable {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_27:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffffffffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_27)\ntag_28:\ntag_26:\n  pop\n  swap1\n  pop\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  pop\n  swap1\n  jump\t// out\ntag_30:\ntag_31:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_31)\ntag_32:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_34:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_36:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:570   */\ntag_37:\n    /* \"#utility.yul\":511:518   */\n  0x00\n    /* \"#utility.yul\":540:564   */\n  tag_57\n    /* \"#utility.yul\":558:563   */\n  dup3\n    /* \"#utility.yul\":540:564   */\n  tag_36\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":529:564   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":576:714   */\ntag_38:\n    /* \"#utility.yul\":657:689   */\n  tag_59\n    /* \"#utility.yul\":683:688   */\n  dup2\n    /* \"#utility.yul\":657:689   */\n  tag_37\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":650:655   */\n  dup2\n    /* \"#utility.yul\":647:690   */\n  eq\n    /* \"#utility.yul\":637:708   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":704:705   */\n  0x00\n    /* \"#utility.yul\":701:702   */\n  dup1\n    /* \"#utility.yul\":694:706   */\n  revert\n    /* \"#utility.yul\":637:708   */\ntag_60:\n    /* \"#utility.yul\":576:714   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:879   */\ntag_39:\n    /* \"#utility.yul\":785:790   */\n  0x00\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":810:823   */\n  mload\n    /* \"#utility.yul\":801:823   */\n  swap1\n  pop\n    /* \"#utility.yul\":832:873   */\n  tag_62\n    /* \"#utility.yul\":867:872   */\n  dup2\n    /* \"#utility.yul\":832:873   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":720:879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:981   */\ntag_40:\n    /* \"#utility.yul\":922:929   */\n  0x00\n    /* \"#utility.yul\":951:975   */\n  tag_64\n    /* \"#utility.yul\":969:974   */\n  dup3\n    /* \"#utility.yul\":951:975   */\n  tag_36\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":940:975   */\n  swap1\n  pop\n    /* \"#utility.yul\":885:981   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":987:1109   */\ntag_41:\n    /* \"#utility.yul\":1060:1084   */\n  tag_66\n    /* \"#utility.yul\":1078:1083   */\n  dup2\n    /* \"#utility.yul\":1060:1084   */\n  tag_40\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1053:1058   */\n  dup2\n    /* \"#utility.yul\":1050:1085   */\n  eq\n    /* \"#utility.yul\":1040:1103   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1099:1100   */\n  0x00\n    /* \"#utility.yul\":1096:1097   */\n  dup1\n    /* \"#utility.yul\":1089:1101   */\n  revert\n    /* \"#utility.yul\":1040:1103   */\ntag_67:\n    /* \"#utility.yul\":987:1109   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1115:1258   */\ntag_42:\n    /* \"#utility.yul\":1172:1177   */\n  0x00\n    /* \"#utility.yul\":1203:1209   */\n  dup2\n    /* \"#utility.yul\":1197:1210   */\n  mload\n    /* \"#utility.yul\":1188:1210   */\n  swap1\n  pop\n    /* \"#utility.yul\":1219:1252   */\n  tag_69\n    /* \"#utility.yul\":1246:1251   */\n  dup2\n    /* \"#utility.yul\":1219:1252   */\n  tag_41\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1115:1258   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1264:2100   */\ntag_5:\n    /* \"#utility.yul\":1369:1375   */\n  0x00\n    /* \"#utility.yul\":1377:1383   */\n  dup1\n    /* \"#utility.yul\":1385:1391   */\n  0x00\n    /* \"#utility.yul\":1393:1399   */\n  dup1\n    /* \"#utility.yul\":1442:1445   */\n  0x80\n    /* \"#utility.yul\":1430:1439   */\n  dup6\n    /* \"#utility.yul\":1421:1428   */\n  dup8\n    /* \"#utility.yul\":1417:1440   */\n  sub\n    /* \"#utility.yul\":1413:1446   */\n  slt\n    /* \"#utility.yul\":1410:1530   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1449:1528   */\n  tag_72\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1410:1530   */\ntag_71:\n    /* \"#utility.yul\":1569:1570   */\n  0x00\n    /* \"#utility.yul\":1594:1666   */\n  tag_73\n    /* \"#utility.yul\":1658:1665   */\n  dup8\n    /* \"#utility.yul\":1649:1655   */\n  dup3\n    /* \"#utility.yul\":1638:1647   */\n  dup9\n    /* \"#utility.yul\":1634:1656   */\n  add\n    /* \"#utility.yul\":1594:1666   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1584:1666   */\n  swap5\n  pop\n    /* \"#utility.yul\":1540:1676   */\n  pop\n    /* \"#utility.yul\":1715:1717   */\n  0x20\n    /* \"#utility.yul\":1741:1805   */\n  tag_74\n    /* \"#utility.yul\":1797:1804   */\n  dup8\n    /* \"#utility.yul\":1788:1794   */\n  dup3\n    /* \"#utility.yul\":1777:1786   */\n  dup9\n    /* \"#utility.yul\":1773:1795   */\n  add\n    /* \"#utility.yul\":1741:1805   */\n  tag_42\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1731:1805   */\n  swap4\n  pop\n    /* \"#utility.yul\":1686:1815   */\n  pop\n    /* \"#utility.yul\":1854:1856   */\n  0x40\n    /* \"#utility.yul\":1880:1944   */\n  tag_75\n    /* \"#utility.yul\":1936:1943   */\n  dup8\n    /* \"#utility.yul\":1927:1933   */\n  dup3\n    /* \"#utility.yul\":1916:1925   */\n  dup9\n    /* \"#utility.yul\":1912:1934   */\n  add\n    /* \"#utility.yul\":1880:1944   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1870:1944   */\n  swap3\n  pop\n    /* \"#utility.yul\":1825:1954   */\n  pop\n    /* \"#utility.yul\":1993:1995   */\n  0x60\n    /* \"#utility.yul\":2019:2083   */\n  tag_76\n    /* \"#utility.yul\":2075:2082   */\n  dup8\n    /* \"#utility.yul\":2066:2072   */\n  dup3\n    /* \"#utility.yul\":2055:2064   */\n  dup9\n    /* \"#utility.yul\":2051:2073   */\n  add\n    /* \"#utility.yul\":2019:2083   */\n  tag_42\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2009:2083   */\n  swap2\n  pop\n    /* \"#utility.yul\":1964:2093   */\n  pop\n    /* \"#utility.yul\":1264:2100   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2106:2224   */\ntag_43:\n    /* \"#utility.yul\":2193:2217   */\n  tag_78\n    /* \"#utility.yul\":2211:2216   */\n  dup2\n    /* \"#utility.yul\":2193:2217   */\n  tag_40\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2188:2191   */\n  dup3\n    /* \"#utility.yul\":2181:2218   */\n  mstore\n    /* \"#utility.yul\":2106:2224   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2230:2452   */\ntag_11:\n    /* \"#utility.yul\":2323:2327   */\n  0x00\n    /* \"#utility.yul\":2361:2363   */\n  0x20\n    /* \"#utility.yul\":2350:2359   */\n  dup3\n    /* \"#utility.yul\":2346:2364   */\n  add\n    /* \"#utility.yul\":2338:2364   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2445   */\n  tag_80\n    /* \"#utility.yul\":2442:2443   */\n  0x00\n    /* \"#utility.yul\":2431:2440   */\n  dup4\n    /* \"#utility.yul\":2427:2444   */\n  add\n    /* \"#utility.yul\":2418:2424   */\n  dup5\n    /* \"#utility.yul\":2374:2445   */\n  tag_43\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2230:2452   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2458:2627   */\ntag_44:\n    /* \"#utility.yul\":2542:2553   */\n  0x00\n    /* \"#utility.yul\":2576:2582   */\n  dup3\n    /* \"#utility.yul\":2571:2574   */\n  dup3\n    /* \"#utility.yul\":2564:2583   */\n  mstore\n    /* \"#utility.yul\":2616:2620   */\n  0x20\n    /* \"#utility.yul\":2611:2614   */\n  dup3\n    /* \"#utility.yul\":2607:2621   */\n  add\n    /* \"#utility.yul\":2592:2621   */\n  swap1\n  pop\n    /* \"#utility.yul\":2458:2627   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2633:2806   */\ntag_45:\n    /* \"#utility.yul\":2773:2798   */\n  0x496e76616c69642074726561737572792077616c6c6574000000000000000000\n    /* \"#utility.yul\":2769:2770   */\n  0x00\n    /* \"#utility.yul\":2761:2767   */\n  dup3\n    /* \"#utility.yul\":2757:2771   */\n  add\n    /* \"#utility.yul\":2750:2799   */\n  mstore\n    /* \"#utility.yul\":2633:2806   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2812:3178   */\ntag_46:\n    /* \"#utility.yul\":2954:2957   */\n  0x00\n    /* \"#utility.yul\":2975:3042   */\n  tag_84\n    /* \"#utility.yul\":3039:3041   */\n  0x17\n    /* \"#utility.yul\":3034:3037   */\n  dup4\n    /* \"#utility.yul\":2975:3042   */\n  tag_44\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2968:3042   */\n  swap2\n  pop\n    /* \"#utility.yul\":3051:3144   */\n  tag_85\n    /* \"#utility.yul\":3140:3143   */\n  dup3\n    /* \"#utility.yul\":3051:3144   */\n  tag_45\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3169:3171   */\n  0x20\n    /* \"#utility.yul\":3164:3167   */\n  dup3\n    /* \"#utility.yul\":3160:3172   */\n  add\n    /* \"#utility.yul\":3153:3172   */\n  swap1\n  pop\n    /* \"#utility.yul\":2812:3178   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3184:3603   */\ntag_17:\n    /* \"#utility.yul\":3350:3354   */\n  0x00\n    /* \"#utility.yul\":3388:3390   */\n  0x20\n    /* \"#utility.yul\":3377:3386   */\n  dup3\n    /* \"#utility.yul\":3373:3391   */\n  add\n    /* \"#utility.yul\":3365:3391   */\n  swap1\n  pop\n    /* \"#utility.yul\":3437:3446   */\n  dup2\n    /* \"#utility.yul\":3431:3435   */\n  dup2\n    /* \"#utility.yul\":3427:3447   */\n  sub\n    /* \"#utility.yul\":3423:3424   */\n  0x00\n    /* \"#utility.yul\":3412:3421   */\n  dup4\n    /* \"#utility.yul\":3408:3425   */\n  add\n    /* \"#utility.yul\":3401:3448   */\n  mstore\n    /* \"#utility.yul\":3465:3596   */\n  tag_87\n    /* \"#utility.yul\":3591:3595   */\n  dup2\n    /* \"#utility.yul\":3465:3596   */\n  tag_46\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3457:3596   */\n  swap1\n  pop\n    /* \"#utility.yul\":3184:3603   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3609:3780   */\ntag_47:\n    /* \"#utility.yul\":3749:3772   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":3745:3746   */\n  0x00\n    /* \"#utility.yul\":3737:3743   */\n  dup3\n    /* \"#utility.yul\":3733:3747   */\n  add\n    /* \"#utility.yul\":3726:3773   */\n  mstore\n    /* \"#utility.yul\":3609:3780   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3786:4152   */\ntag_48:\n    /* \"#utility.yul\":3928:3931   */\n  0x00\n    /* \"#utility.yul\":3949:4016   */\n  tag_90\n    /* \"#utility.yul\":4013:4015   */\n  0x15\n    /* \"#utility.yul\":4008:4011   */\n  dup4\n    /* \"#utility.yul\":3949:4016   */\n  tag_44\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3942:4016   */\n  swap2\n  pop\n    /* \"#utility.yul\":4025:4118   */\n  tag_91\n    /* \"#utility.yul\":4114:4117   */\n  dup3\n    /* \"#utility.yul\":4025:4118   */\n  tag_47\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4143:4145   */\n  0x20\n    /* \"#utility.yul\":4138:4141   */\n  dup3\n    /* \"#utility.yul\":4134:4146   */\n  add\n    /* \"#utility.yul\":4127:4146   */\n  swap1\n  pop\n    /* \"#utility.yul\":3786:4152   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4158:4577   */\ntag_20:\n    /* \"#utility.yul\":4324:4328   */\n  0x00\n    /* \"#utility.yul\":4362:4364   */\n  0x20\n    /* \"#utility.yul\":4351:4360   */\n  dup3\n    /* \"#utility.yul\":4347:4365   */\n  add\n    /* \"#utility.yul\":4339:4365   */\n  swap1\n  pop\n    /* \"#utility.yul\":4411:4420   */\n  dup2\n    /* \"#utility.yul\":4405:4409   */\n  dup2\n    /* \"#utility.yul\":4401:4421   */\n  sub\n    /* \"#utility.yul\":4397:4398   */\n  0x00\n    /* \"#utility.yul\":4386:4395   */\n  dup4\n    /* \"#utility.yul\":4382:4399   */\n  add\n    /* \"#utility.yul\":4375:4422   */\n  mstore\n    /* \"#utility.yul\":4439:4570   */\n  tag_93\n    /* \"#utility.yul\":4565:4569   */\n  dup2\n    /* \"#utility.yul\":4439:4570   */\n  tag_48\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4431:4570   */\n  swap1\n  pop\n    /* \"#utility.yul\":4158:4577   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4583:4753   */\ntag_49:\n    /* \"#utility.yul\":4723:4745   */\n  0x496e76616c696420555344542061646472657373000000000000000000000000\n    /* \"#utility.yul\":4719:4720   */\n  0x00\n    /* \"#utility.yul\":4711:4717   */\n  dup3\n    /* \"#utility.yul\":4707:4721   */\n  add\n    /* \"#utility.yul\":4700:4746   */\n  mstore\n    /* \"#utility.yul\":4583:4753   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4759:5125   */\ntag_50:\n    /* \"#utility.yul\":4901:4904   */\n  0x00\n    /* \"#utility.yul\":4922:4989   */\n  tag_96\n    /* \"#utility.yul\":4986:4988   */\n  0x14\n    /* \"#utility.yul\":4981:4984   */\n  dup4\n    /* \"#utility.yul\":4922:4989   */\n  tag_44\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4915:4989   */\n  swap2\n  pop\n    /* \"#utility.yul\":4998:5091   */\n  tag_97\n    /* \"#utility.yul\":5087:5090   */\n  dup3\n    /* \"#utility.yul\":4998:5091   */\n  tag_49\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5116:5118   */\n  0x20\n    /* \"#utility.yul\":5111:5114   */\n  dup3\n    /* \"#utility.yul\":5107:5119   */\n  add\n    /* \"#utility.yul\":5100:5119   */\n  swap1\n  pop\n    /* \"#utility.yul\":4759:5125   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5131:5550   */\ntag_23:\n    /* \"#utility.yul\":5297:5301   */\n  0x00\n    /* \"#utility.yul\":5335:5337   */\n  0x20\n    /* \"#utility.yul\":5324:5333   */\n  dup3\n    /* \"#utility.yul\":5320:5338   */\n  add\n    /* \"#utility.yul\":5312:5338   */\n  swap1\n  pop\n    /* \"#utility.yul\":5384:5393   */\n  dup2\n    /* \"#utility.yul\":5378:5382   */\n  dup2\n    /* \"#utility.yul\":5374:5394   */\n  sub\n    /* \"#utility.yul\":5370:5371   */\n  0x00\n    /* \"#utility.yul\":5359:5368   */\n  dup4\n    /* \"#utility.yul\":5355:5372   */\n  add\n    /* \"#utility.yul\":5348:5395   */\n  mstore\n    /* \"#utility.yul\":5412:5543   */\n  tag_99\n    /* \"#utility.yul\":5538:5542   */\n  dup2\n    /* \"#utility.yul\":5412:5543   */\n  tag_50\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5404:5543   */\n  swap1\n  pop\n    /* \"#utility.yul\":5131:5550   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"donation.sol\":406:4002  contract GraceDonation is Ownable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"donation.sol\":406:4002  contract GraceDonation is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x809d458d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xb0304813\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb0304813\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe89e4ed6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf8d0bb6f\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x809d458d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_15:\n      dup1\n      0xb37044\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x14a8bd0d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5610eca0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7e43c77d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"donation.sol\":676:703  uint256 public totalDonated */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":592:641  uint256 public constant EXCHANGE_RATE = 0.1 ether */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":482:519  address payable public treasuryWallet */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":2579:3199  function donateUSDT(uint256 amount) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"donation.sol\":526:555  IGraceToken public graceToken */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":3207:3390  function updateTreasuryWallet(address payable newWallet) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":562:585  IERC20 public usdtToken */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":993:1024  uint256 public currentMilestone */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"donation.sol\":1861:2571  function donatePOL() external payable {... */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"donation.sol\":676:703  uint256 public totalDonated */\n    tag_19:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"donation.sol\":592:641  uint256 public constant EXCHANGE_RATE = 0.1 ether */\n    tag_24:\n        /* \"donation.sol\":632:641  0.1 ether */\n      0x016345785d8a0000\n        /* \"donation.sol\":592:641  uint256 public constant EXCHANGE_RATE = 0.1 ether */\n      dup2\n      jump\t// out\n        /* \"donation.sol\":482:519  address payable public treasuryWallet */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"donation.sol\":2579:3199  function donateUSDT(uint256 amount) external {... */\n    tag_35:\n        /* \"donation.sol\":2652:2653  0 */\n      0x00\n        /* \"donation.sol\":2643:2649  amount */\n      dup2\n        /* \"donation.sol\":2643:2653  amount > 0 */\n      gt\n        /* \"donation.sol\":2635:2687  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"donation.sol\":2747:2809  usdtToken.safeTransferFrom(msg.sender, treasuryWallet, amount) */\n      tag_79\n        /* \"donation.sol\":2774:2784  msg.sender */\n      caller\n        /* \"donation.sol\":2786:2800  treasuryWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2802:2808  amount */\n      dup4\n        /* \"donation.sol\":2747:2756  usdtToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2747:2773  usdtToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_80\n      swap1\n        /* \"donation.sol\":2747:2809  usdtToken.safeTransferFrom(msg.sender, treasuryWallet, amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"donation.sol\":2868:2887  uint256 graceAmount */\n      0x00\n        /* \"donation.sol\":2945:2954  usdtToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2922:2965  IERC20Metadata(address(usdtToken)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"donation.sol\":2922:2967  IERC20Metadata(address(usdtToken)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"donation.sol\":2918:2920  10 */\n      0x0a\n        /* \"donation.sol\":2918:2967  10**IERC20Metadata(address(usdtToken)).decimals() */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"donation.sol\":632:641  0.1 ether */\n      0x016345785d8a0000\n        /* \"donation.sol\":2891:2897  amount */\n      dup4\n        /* \"donation.sol\":2891:2913  amount * EXCHANGE_RATE */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"donation.sol\":2890:2968  (amount * EXCHANGE_RATE) / (10**IERC20Metadata(address(usdtToken)).decimals()) */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"donation.sol\":2868:2968  uint256 graceAmount = (amount * EXCHANGE_RATE) / (10**IERC20Metadata(address(usdtToken)).decimals()) */\n      swap1\n      pop\n        /* \"donation.sol\":2979:2989  graceToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2979:2994  graceToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"donation.sol\":2995:3005  msg.sender */\n      caller\n        /* \"donation.sol\":3007:3018  graceAmount */\n      dup4\n        /* \"donation.sol\":2979:3019  graceToken.mint(msg.sender, graceAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n        /* \"donation.sol\":3081:3087  amount */\n      dup2\n        /* \"donation.sol\":3065:3077  totalDonated */\n      0x04\n      0x00\n        /* \"donation.sol\":3065:3087  totalDonated += amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":3098:3115  _checkMilestone() */\n      tag_98\n        /* \"donation.sol\":3098:3113  _checkMilestone */\n      tag_99\n        /* \"donation.sol\":3098:3115  _checkMilestone() */\n      jump\t// in\n    tag_98:\n        /* \"donation.sol\":3145:3155  msg.sender */\n      caller\n        /* \"donation.sol\":3133:3191  DonatedUSDT(msg.sender, amount, graceAmount, totalDonated) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1ce55f2081708dbef7ac42c3785b4627ccd4aa19f21b694b54c92df3d146996a\n        /* \"donation.sol\":3157:3163  amount */\n      dup4\n        /* \"donation.sol\":3165:3176  graceAmount */\n      dup4\n        /* \"donation.sol\":3178:3190  totalDonated */\n      sload(0x04)\n        /* \"donation.sol\":3133:3191  DonatedUSDT(msg.sender, amount, graceAmount, totalDonated) */\n      mload(0x40)\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"donation.sol\":2624:3199  {... */\n      pop\n        /* \"donation.sol\":2579:3199  function donateUSDT(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"donation.sol\":526:555  IGraceToken public graceToken */\n    tag_41:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"donation.sol\":3207:3390  function updateTreasuryWallet(address payable newWallet) external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"donation.sol\":3323:3324  0 */\n      0x00\n        /* \"donation.sol\":3302:3325  newWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":3302:3311  newWallet */\n      dup2\n        /* \"donation.sol\":3302:3325  newWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"donation.sol\":3294:3345  require(newWallet != address(0), \"Invalid address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"donation.sol\":3373:3382  newWallet */\n      dup1\n        /* \"donation.sol\":3356:3370  treasuryWallet */\n      0x01\n      0x00\n        /* \"donation.sol\":3356:3382  treasuryWallet = newWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":3207:3390  function updateTreasuryWallet(address payable newWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"donation.sol\":562:585  IERC20 public usdtToken */\n    tag_56:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"donation.sol\":993:1024  uint256 public currentMilestone */\n    tag_61:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"donation.sol\":797:986  uint256[] public milestones = [... */\n    tag_66:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"donation.sol\":1861:2571  function donatePOL() external payable {... */\n    tag_74:\n        /* \"donation.sol\":1930:1931  0 */\n      0x00\n        /* \"donation.sol\":1918:1927  msg.value */\n      callvalue\n        /* \"donation.sol\":1918:1931  msg.value > 0 */\n      gt\n        /* \"donation.sol\":1910:1961  require(msg.value > 0, \"Zero donation not allowed\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"donation.sol\":2011:2020  bool sent */\n      0x00\n        /* \"donation.sol\":2026:2040  treasuryWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2026:2045  treasuryWallet.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2053:2062  msg.value */\n      callvalue\n        /* \"donation.sol\":2026:2067  treasuryWallet.call{value: msg.value}(\"\") */\n      mload(0x40)\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_131\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_130)\n    tag_131:\n      0x60\n      swap2\n      pop\n    tag_130:\n      pop\n        /* \"donation.sol\":2010:2067  (bool sent, ) = treasuryWallet.call{value: msg.value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"donation.sol\":2086:2090  sent */\n      dup1\n        /* \"donation.sol\":2078:2114  require(sent, \"POL transfer failed\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"donation.sol\":2170:2189  uint256 graceAmount */\n      0x00\n        /* \"donation.sol\":2222:2229  1 ether */\n      0x0de0b6b3a7640000\n        /* \"donation.sol\":632:641  0.1 ether */\n      0x016345785d8a0000\n        /* \"donation.sol\":2193:2202  msg.value */\n      callvalue\n        /* \"donation.sol\":2193:2218  msg.value * EXCHANGE_RATE */\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n        /* \"donation.sol\":2192:2229  (msg.value * EXCHANGE_RATE) / 1 ether */\n      tag_136\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_136:\n        /* \"donation.sol\":2170:2229  uint256 graceAmount = (msg.value * EXCHANGE_RATE) / 1 ether */\n      swap1\n      pop\n        /* \"donation.sol\":2240:2250  graceToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"donation.sol\":2240:2255  graceToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"donation.sol\":2256:2266  msg.sender */\n      caller\n        /* \"donation.sol\":2268:2279  graceAmount */\n      dup4\n        /* \"donation.sol\":2240:2280  graceToken.mint(msg.sender, graceAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_137:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n        /* \"donation.sol\":2398:2404  10**12 */\n      0xe8d4a51000\n        /* \"donation.sol\":2386:2395  msg.value */\n      callvalue\n        /* \"donation.sol\":2386:2404  msg.value / 10**12 */\n      tag_141\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_141:\n        /* \"donation.sol\":2370:2382  totalDonated */\n      0x04\n      0x00\n        /* \"donation.sol\":2370:2404  totalDonated += msg.value / 10**12 */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":2468:2485  _checkMilestone() */\n      tag_143\n        /* \"donation.sol\":2468:2483  _checkMilestone */\n      tag_99\n        /* \"donation.sol\":2468:2485  _checkMilestone() */\n      jump\t// in\n    tag_143:\n        /* \"donation.sol\":2514:2524  msg.sender */\n      caller\n        /* \"donation.sol\":2503:2563  DonatedPOL(msg.sender, msg.value, graceAmount, totalDonated) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9c9ad9270af0183a99bf47ee6beebcad2fc6ef1992082283d76ec94947158b51\n        /* \"donation.sol\":2526:2535  msg.value */\n      callvalue\n        /* \"donation.sol\":2537:2548  graceAmount */\n      dup4\n        /* \"donation.sol\":2550:2562  totalDonated */\n      sload(0x04)\n        /* \"donation.sol\":2503:2563  DonatedPOL(msg.sender, msg.value, graceAmount, totalDonated) */\n      mload(0x40)\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"donation.sol\":1899:2571  {... */\n      pop\n      pop\n        /* \"donation.sol\":1861:2571  function donatePOL() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"donation.sol\":3398:3739  function _checkMilestone() internal {... */\n    tag_99:\n        /* \"donation.sol\":3450:3459  uint256 i */\n      0x00\n        /* \"donation.sol\":3462:3478  currentMilestone */\n      sload(0x06)\n        /* \"donation.sol\":3450:3478  uint256 i = currentMilestone */\n      swap1\n      pop\n        /* \"donation.sol\":3445:3732  for (uint256 i = currentMilestone; i < milestones.length; i++) {... */\n    tag_151:\n        /* \"donation.sol\":3484:3494  milestones */\n      0x05\n        /* \"donation.sol\":3484:3501  milestones.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"donation.sol\":3480:3481  i */\n      dup2\n        /* \"donation.sol\":3480:3501  i < milestones.length */\n      lt\n        /* \"donation.sol\":3445:3732  for (uint256 i = currentMilestone; i < milestones.length; i++) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"donation.sol\":3543:3553  milestones */\n      0x05\n        /* \"donation.sol\":3554:3555  i */\n      dup2\n        /* \"donation.sol\":3543:3556  milestones[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n    tag_154:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"donation.sol\":3527:3539  totalDonated */\n      sload(0x04)\n        /* \"donation.sol\":3527:3556  totalDonated >= milestones[i] */\n      lt\n        /* \"donation.sol\":3523:3721  if (totalDonated >= milestones[i]) {... */\n      tag_158\n      jumpi\n        /* \"donation.sol\":3600:3601  1 */\n      0x01\n        /* \"donation.sol\":3596:3597  i */\n      dup2\n        /* \"donation.sol\":3596:3601  i + 1 */\n      tag_159\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_159:\n        /* \"donation.sol\":3577:3593  currentMilestone */\n      0x06\n        /* \"donation.sol\":3577:3601  currentMilestone = i + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"donation.sol\":3625:3659  MilestoneReached(milestones[i], i) */\n      0xe5f196b7c35531c9cdf28ee121967688b244c8557b574489a6182e8f66c929d3\n        /* \"donation.sol\":3642:3652  milestones */\n      0x05\n        /* \"donation.sol\":3653:3654  i */\n      dup3\n        /* \"donation.sol\":3642:3655  milestones[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_156\n      jump\t// in\n    tag_161:\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"donation.sol\":3657:3658  i */\n      dup3\n        /* \"donation.sol\":3625:3659  MilestoneReached(milestones[i], i) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"donation.sol\":3523:3721  if (totalDonated >= milestones[i]) {... */\n      jump(tag_165)\n    tag_158:\n        /* \"donation.sol\":3700:3705  break */\n      jump(tag_152)\n        /* \"donation.sol\":3523:3721  if (totalDonated >= milestones[i]) {... */\n    tag_165:\n        /* \"donation.sol\":3503:3506  i++ */\n      dup1\n      dup1\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      swap2\n      pop\n      pop\n        /* \"donation.sol\":3445:3732  for (uint256 i = currentMilestone; i < milestones.length; i++) {... */\n      jump(tag_151)\n    tag_152:\n      pop\n        /* \"donation.sol\":3398:3739  function _checkMilestone() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_179)\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_183:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_184:\n        /* \"#utility.yul\":177:201   */\n      tag_229\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_183\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_21:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_231\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_184\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_185:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:678   */\n    tag_186:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_234\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_185\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:826   */\n    tag_187:\n        /* \"#utility.yul\":787:819   */\n      tag_236\n        /* \"#utility.yul\":813:818   */\n      dup2\n        /* \"#utility.yul\":787:819   */\n      tag_186\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":782:785   */\n      dup3\n        /* \"#utility.yul\":775:820   */\n      mstore\n        /* \"#utility.yul\":684:826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":832:1086   */\n    tag_30:\n        /* \"#utility.yul\":941:945   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":968:977   */\n      dup3\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"#utility.yul\":956:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":992:1079   */\n      tag_238\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1065:1074   */\n      dup4\n        /* \"#utility.yul\":1061:1078   */\n      add\n        /* \"#utility.yul\":1052:1058   */\n      dup5\n        /* \"#utility.yul\":992:1079   */\n      tag_187\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":832:1086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1290   */\n    tag_189:\n        /* \"#utility.yul\":1282:1283   */\n      0x00\n        /* \"#utility.yul\":1279:1280   */\n      dup1\n        /* \"#utility.yul\":1272:1284   */\n      revert\n        /* \"#utility.yul\":1419:1541   */\n    tag_191:\n        /* \"#utility.yul\":1492:1516   */\n      tag_243\n        /* \"#utility.yul\":1510:1515   */\n      dup2\n        /* \"#utility.yul\":1492:1516   */\n      tag_183\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1485:1490   */\n      dup2\n        /* \"#utility.yul\":1482:1517   */\n      eq\n        /* \"#utility.yul\":1472:1535   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1531:1532   */\n      0x00\n        /* \"#utility.yul\":1528:1529   */\n      dup1\n        /* \"#utility.yul\":1521:1533   */\n      revert\n        /* \"#utility.yul\":1472:1535   */\n    tag_244:\n        /* \"#utility.yul\":1419:1541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1547:1686   */\n    tag_192:\n        /* \"#utility.yul\":1593:1598   */\n      0x00\n        /* \"#utility.yul\":1631:1637   */\n      dup2\n        /* \"#utility.yul\":1618:1638   */\n      calldataload\n        /* \"#utility.yul\":1609:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1647:1680   */\n      tag_246\n        /* \"#utility.yul\":1674:1679   */\n      dup2\n        /* \"#utility.yul\":1647:1680   */\n      tag_191\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1547:1686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1692:2021   */\n    tag_34:\n        /* \"#utility.yul\":1751:1757   */\n      0x00\n        /* \"#utility.yul\":1800:1802   */\n      0x20\n        /* \"#utility.yul\":1788:1797   */\n      dup3\n        /* \"#utility.yul\":1779:1786   */\n      dup5\n        /* \"#utility.yul\":1775:1798   */\n      sub\n        /* \"#utility.yul\":1771:1803   */\n      slt\n        /* \"#utility.yul\":1768:1887   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1806:1885   */\n      tag_249\n      tag_189\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1768:1887   */\n    tag_248:\n        /* \"#utility.yul\":1926:1927   */\n      0x00\n        /* \"#utility.yul\":1951:2004   */\n      tag_250\n        /* \"#utility.yul\":1996:2003   */\n      dup5\n        /* \"#utility.yul\":1987:1993   */\n      dup3\n        /* \"#utility.yul\":1976:1985   */\n      dup6\n        /* \"#utility.yul\":1972:1994   */\n      add\n        /* \"#utility.yul\":1951:2004   */\n      tag_192\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1941:2004   */\n      swap2\n      pop\n        /* \"#utility.yul\":1897:2014   */\n      pop\n        /* \"#utility.yul\":1692:2021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2087   */\n    tag_193:\n        /* \"#utility.yul\":2055:2058   */\n      0x00\n        /* \"#utility.yul\":2076:2081   */\n      dup2\n        /* \"#utility.yul\":2069:2081   */\n      swap1\n      pop\n        /* \"#utility.yul\":2027:2087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2235   */\n    tag_194:\n        /* \"#utility.yul\":2143:2152   */\n      0x00\n        /* \"#utility.yul\":2176:2229   */\n      tag_253\n        /* \"#utility.yul\":2194:2228   */\n      tag_254\n        /* \"#utility.yul\":2203:2227   */\n      tag_255\n        /* \"#utility.yul\":2221:2226   */\n      dup5\n        /* \"#utility.yul\":2203:2227   */\n      tag_185\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2194:2228   */\n      tag_193\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2176:2229   */\n      tag_185\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2163:2229   */\n      swap1\n      pop\n        /* \"#utility.yul\":2093:2235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2367   */\n    tag_195:\n        /* \"#utility.yul\":2291:2300   */\n      0x00\n        /* \"#utility.yul\":2324:2361   */\n      tag_257\n        /* \"#utility.yul\":2355:2360   */\n      dup3\n        /* \"#utility.yul\":2324:2361   */\n      tag_194\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2311:2361   */\n      swap1\n      pop\n        /* \"#utility.yul\":2241:2367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2373:2518   */\n    tag_196:\n        /* \"#utility.yul\":2442:2451   */\n      0x00\n        /* \"#utility.yul\":2475:2512   */\n      tag_259\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2475:2512   */\n      tag_195\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2462:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2373:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2693   */\n    tag_197:\n        /* \"#utility.yul\":2630:2686   */\n      tag_261\n        /* \"#utility.yul\":2680:2685   */\n      dup2\n        /* \"#utility.yul\":2630:2686   */\n      tag_196\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2625:2628   */\n      dup3\n        /* \"#utility.yul\":2618:2687   */\n      mstore\n        /* \"#utility.yul\":2524:2693   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2959   */\n    tag_43:\n        /* \"#utility.yul\":2811:2815   */\n      0x00\n        /* \"#utility.yul\":2849:2851   */\n      0x20\n        /* \"#utility.yul\":2838:2847   */\n      dup3\n        /* \"#utility.yul\":2834:2852   */\n      add\n        /* \"#utility.yul\":2826:2852   */\n      swap1\n      pop\n        /* \"#utility.yul\":2862:2952   */\n      tag_263\n        /* \"#utility.yul\":2949:2950   */\n      0x00\n        /* \"#utility.yul\":2938:2947   */\n      dup4\n        /* \"#utility.yul\":2934:2951   */\n      add\n        /* \"#utility.yul\":2925:2931   */\n      dup5\n        /* \"#utility.yul\":2862:2952   */\n      tag_197\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2699:2959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2965:3103   */\n    tag_198:\n        /* \"#utility.yul\":3046:3078   */\n      tag_265\n        /* \"#utility.yul\":3072:3077   */\n      dup2\n        /* \"#utility.yul\":3046:3078   */\n      tag_186\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3039:3044   */\n      dup2\n        /* \"#utility.yul\":3036:3079   */\n      eq\n        /* \"#utility.yul\":3026:3097   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3090:3091   */\n      dup1\n        /* \"#utility.yul\":3083:3095   */\n      revert\n        /* \"#utility.yul\":3026:3097   */\n    tag_266:\n        /* \"#utility.yul\":2965:3103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3264   */\n    tag_199:\n        /* \"#utility.yul\":3163:3168   */\n      0x00\n        /* \"#utility.yul\":3201:3207   */\n      dup2\n        /* \"#utility.yul\":3188:3208   */\n      calldataload\n        /* \"#utility.yul\":3179:3208   */\n      swap1\n      pop\n        /* \"#utility.yul\":3217:3258   */\n      tag_268\n        /* \"#utility.yul\":3252:3257   */\n      dup2\n        /* \"#utility.yul\":3217:3258   */\n      tag_198\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3109:3264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3615   */\n    tag_47:\n        /* \"#utility.yul\":3337:3343   */\n      0x00\n        /* \"#utility.yul\":3386:3388   */\n      0x20\n        /* \"#utility.yul\":3374:3383   */\n      dup3\n        /* \"#utility.yul\":3365:3372   */\n      dup5\n        /* \"#utility.yul\":3361:3384   */\n      sub\n        /* \"#utility.yul\":3357:3389   */\n      slt\n        /* \"#utility.yul\":3354:3473   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3392:3471   */\n      tag_271\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3354:3473   */\n    tag_270:\n        /* \"#utility.yul\":3512:3513   */\n      0x00\n        /* \"#utility.yul\":3537:3598   */\n      tag_272\n        /* \"#utility.yul\":3590:3597   */\n      dup5\n        /* \"#utility.yul\":3581:3587   */\n      dup3\n        /* \"#utility.yul\":3570:3579   */\n      dup6\n        /* \"#utility.yul\":3566:3588   */\n      add\n        /* \"#utility.yul\":3537:3598   */\n      tag_199\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3527:3598   */\n      swap2\n      pop\n        /* \"#utility.yul\":3483:3608   */\n      pop\n        /* \"#utility.yul\":3270:3615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3621:3717   */\n    tag_200:\n        /* \"#utility.yul\":3658:3665   */\n      0x00\n        /* \"#utility.yul\":3687:3711   */\n      tag_274\n        /* \"#utility.yul\":3705:3710   */\n      dup3\n        /* \"#utility.yul\":3687:3711   */\n      tag_185\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3676:3711   */\n      swap1\n      pop\n        /* \"#utility.yul\":3621:3717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:3841   */\n    tag_201:\n        /* \"#utility.yul\":3810:3834   */\n      tag_276\n        /* \"#utility.yul\":3828:3833   */\n      dup2\n        /* \"#utility.yul\":3810:3834   */\n      tag_200\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3805:3808   */\n      dup3\n        /* \"#utility.yul\":3798:3835   */\n      mstore\n        /* \"#utility.yul\":3723:3841   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:4069   */\n    tag_53:\n        /* \"#utility.yul\":3940:3944   */\n      0x00\n        /* \"#utility.yul\":3978:3980   */\n      0x20\n        /* \"#utility.yul\":3967:3976   */\n      dup3\n        /* \"#utility.yul\":3963:3981   */\n      add\n        /* \"#utility.yul\":3955:3981   */\n      swap1\n      pop\n        /* \"#utility.yul\":3991:4062   */\n      tag_278\n        /* \"#utility.yul\":4059:4060   */\n      0x00\n        /* \"#utility.yul\":4048:4057   */\n      dup4\n        /* \"#utility.yul\":4044:4061   */\n      add\n        /* \"#utility.yul\":4035:4041   */\n      dup5\n        /* \"#utility.yul\":3991:4062   */\n      tag_201\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3847:4069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4075:4215   */\n    tag_202:\n        /* \"#utility.yul\":4139:4148   */\n      0x00\n        /* \"#utility.yul\":4172:4209   */\n      tag_280\n        /* \"#utility.yul\":4203:4208   */\n      dup3\n        /* \"#utility.yul\":4172:4209   */\n      tag_195\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4159:4209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4075:4215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4221:4380   */\n    tag_203:\n        /* \"#utility.yul\":4322:4373   */\n      tag_282\n        /* \"#utility.yul\":4367:4372   */\n      dup2\n        /* \"#utility.yul\":4322:4373   */\n      tag_202\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4317:4320   */\n      dup3\n        /* \"#utility.yul\":4310:4374   */\n      mstore\n        /* \"#utility.yul\":4221:4380   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4636   */\n    tag_58:\n        /* \"#utility.yul\":4493:4497   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4520:4529   */\n      dup3\n        /* \"#utility.yul\":4516:4534   */\n      add\n        /* \"#utility.yul\":4508:4534   */\n      swap1\n      pop\n        /* \"#utility.yul\":4544:4629   */\n      tag_284\n        /* \"#utility.yul\":4626:4627   */\n      0x00\n        /* \"#utility.yul\":4615:4624   */\n      dup4\n        /* \"#utility.yul\":4611:4628   */\n      add\n        /* \"#utility.yul\":4602:4608   */\n      dup5\n        /* \"#utility.yul\":4544:4629   */\n      tag_203\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4386:4636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4642:4764   */\n    tag_204:\n        /* \"#utility.yul\":4715:4739   */\n      tag_286\n        /* \"#utility.yul\":4733:4738   */\n      dup2\n        /* \"#utility.yul\":4715:4739   */\n      tag_200\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4708:4713   */\n      dup2\n        /* \"#utility.yul\":4705:4740   */\n      eq\n        /* \"#utility.yul\":4695:4758   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":4754:4755   */\n      0x00\n        /* \"#utility.yul\":4751:4752   */\n      dup1\n        /* \"#utility.yul\":4744:4756   */\n      revert\n        /* \"#utility.yul\":4695:4758   */\n    tag_287:\n        /* \"#utility.yul\":4642:4764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4770:4909   */\n    tag_205:\n        /* \"#utility.yul\":4816:4821   */\n      0x00\n        /* \"#utility.yul\":4854:4860   */\n      dup2\n        /* \"#utility.yul\":4841:4861   */\n      calldataload\n        /* \"#utility.yul\":4832:4861   */\n      swap1\n      pop\n        /* \"#utility.yul\":4870:4903   */\n      tag_289\n        /* \"#utility.yul\":4897:4902   */\n      dup2\n        /* \"#utility.yul\":4870:4903   */\n      tag_204\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4770:4909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4915:5244   */\n    tag_71:\n        /* \"#utility.yul\":4974:4980   */\n      0x00\n        /* \"#utility.yul\":5023:5025   */\n      0x20\n        /* \"#utility.yul\":5011:5020   */\n      dup3\n        /* \"#utility.yul\":5002:5009   */\n      dup5\n        /* \"#utility.yul\":4998:5021   */\n      sub\n        /* \"#utility.yul\":4994:5026   */\n      slt\n        /* \"#utility.yul\":4991:5110   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":5029:5108   */\n      tag_292\n      tag_189\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4991:5110   */\n    tag_291:\n        /* \"#utility.yul\":5149:5150   */\n      0x00\n        /* \"#utility.yul\":5174:5227   */\n      tag_293\n        /* \"#utility.yul\":5219:5226   */\n      dup5\n        /* \"#utility.yul\":5210:5216   */\n      dup3\n        /* \"#utility.yul\":5199:5208   */\n      dup6\n        /* \"#utility.yul\":5195:5217   */\n      add\n        /* \"#utility.yul\":5174:5227   */\n      tag_205\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5164:5227   */\n      swap2\n      pop\n        /* \"#utility.yul\":5120:5237   */\n      pop\n        /* \"#utility.yul\":4915:5244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5250:5419   */\n    tag_206:\n        /* \"#utility.yul\":5334:5345   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5363:5366   */\n      dup3\n        /* \"#utility.yul\":5356:5375   */\n      mstore\n        /* \"#utility.yul\":5408:5412   */\n      0x20\n        /* \"#utility.yul\":5403:5406   */\n      dup3\n        /* \"#utility.yul\":5399:5413   */\n      add\n        /* \"#utility.yul\":5384:5413   */\n      swap1\n      pop\n        /* \"#utility.yul\":5250:5419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5425:5604   */\n    tag_207:\n        /* \"#utility.yul\":5565:5596   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":5561:5562   */\n      0x00\n        /* \"#utility.yul\":5553:5559   */\n      dup3\n        /* \"#utility.yul\":5549:5563   */\n      add\n        /* \"#utility.yul\":5542:5597   */\n      mstore\n        /* \"#utility.yul\":5425:5604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5610:5976   */\n    tag_208:\n        /* \"#utility.yul\":5752:5755   */\n      0x00\n        /* \"#utility.yul\":5773:5840   */\n      tag_297\n        /* \"#utility.yul\":5837:5839   */\n      0x1d\n        /* \"#utility.yul\":5832:5835   */\n      dup4\n        /* \"#utility.yul\":5773:5840   */\n      tag_206\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5766:5840   */\n      swap2\n      pop\n        /* \"#utility.yul\":5849:5942   */\n      tag_298\n        /* \"#utility.yul\":5938:5941   */\n      dup3\n        /* \"#utility.yul\":5849:5942   */\n      tag_207\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5967:5969   */\n      0x20\n        /* \"#utility.yul\":5962:5965   */\n      dup3\n        /* \"#utility.yul\":5958:5970   */\n      add\n        /* \"#utility.yul\":5951:5970   */\n      swap1\n      pop\n        /* \"#utility.yul\":5610:5976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5982:6401   */\n    tag_78:\n        /* \"#utility.yul\":6148:6152   */\n      0x00\n        /* \"#utility.yul\":6186:6188   */\n      0x20\n        /* \"#utility.yul\":6175:6184   */\n      dup3\n        /* \"#utility.yul\":6171:6189   */\n      add\n        /* \"#utility.yul\":6163:6189   */\n      swap1\n      pop\n        /* \"#utility.yul\":6235:6244   */\n      dup2\n        /* \"#utility.yul\":6229:6233   */\n      dup2\n        /* \"#utility.yul\":6225:6245   */\n      sub\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6210:6219   */\n      dup4\n        /* \"#utility.yul\":6206:6223   */\n      add\n        /* \"#utility.yul\":6199:6246   */\n      mstore\n        /* \"#utility.yul\":6263:6394   */\n      tag_300\n        /* \"#utility.yul\":6389:6393   */\n      dup2\n        /* \"#utility.yul\":6263:6394   */\n      tag_208\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6255:6394   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:6401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6407:6493   */\n    tag_209:\n        /* \"#utility.yul\":6442:6449   */\n      0x00\n        /* \"#utility.yul\":6482:6486   */\n      0xff\n        /* \"#utility.yul\":6475:6480   */\n      dup3\n        /* \"#utility.yul\":6471:6487   */\n      and\n        /* \"#utility.yul\":6460:6487   */\n      swap1\n      pop\n        /* \"#utility.yul\":6407:6493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6499:6617   */\n    tag_210:\n        /* \"#utility.yul\":6570:6592   */\n      tag_303\n        /* \"#utility.yul\":6586:6591   */\n      dup2\n        /* \"#utility.yul\":6570:6592   */\n      tag_209\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6563:6568   */\n      dup2\n        /* \"#utility.yul\":6560:6593   */\n      eq\n        /* \"#utility.yul\":6550:6611   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":6607:6608   */\n      0x00\n        /* \"#utility.yul\":6604:6605   */\n      dup1\n        /* \"#utility.yul\":6597:6609   */\n      revert\n        /* \"#utility.yul\":6550:6611   */\n    tag_304:\n        /* \"#utility.yul\":6499:6617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6623:6762   */\n    tag_211:\n        /* \"#utility.yul\":6678:6683   */\n      0x00\n        /* \"#utility.yul\":6709:6715   */\n      dup2\n        /* \"#utility.yul\":6703:6716   */\n      mload\n        /* \"#utility.yul\":6694:6716   */\n      swap1\n      pop\n        /* \"#utility.yul\":6725:6756   */\n      tag_306\n        /* \"#utility.yul\":6750:6755   */\n      dup2\n        /* \"#utility.yul\":6725:6756   */\n      tag_210\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6623:6762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:7115   */\n    tag_84:\n        /* \"#utility.yul\":6836:6842   */\n      0x00\n        /* \"#utility.yul\":6885:6887   */\n      0x20\n        /* \"#utility.yul\":6873:6882   */\n      dup3\n        /* \"#utility.yul\":6864:6871   */\n      dup5\n        /* \"#utility.yul\":6860:6883   */\n      sub\n        /* \"#utility.yul\":6856:6888   */\n      slt\n        /* \"#utility.yul\":6853:6972   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6891:6970   */\n      tag_309\n      tag_189\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6853:6972   */\n    tag_308:\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7036:7098   */\n      tag_310\n        /* \"#utility.yul\":7090:7097   */\n      dup5\n        /* \"#utility.yul\":7081:7087   */\n      dup3\n        /* \"#utility.yul\":7070:7079   */\n      dup6\n        /* \"#utility.yul\":7066:7088   */\n      add\n        /* \"#utility.yul\":7036:7098   */\n      tag_211\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7026:7098   */\n      swap2\n      pop\n        /* \"#utility.yul\":6982:7108   */\n      pop\n        /* \"#utility.yul\":6768:7115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7121:7301   */\n    tag_212:\n        /* \"#utility.yul\":7169:7246   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7166:7167   */\n      0x00\n        /* \"#utility.yul\":7159:7247   */\n      mstore\n        /* \"#utility.yul\":7266:7270   */\n      0x11\n        /* \"#utility.yul\":7263:7264   */\n      0x04\n        /* \"#utility.yul\":7256:7271   */\n      mstore\n        /* \"#utility.yul\":7290:7294   */\n      0x24\n        /* \"#utility.yul\":7287:7288   */\n      0x00\n        /* \"#utility.yul\":7280:7295   */\n      revert\n        /* \"#utility.yul\":7307:7409   */\n    tag_213:\n        /* \"#utility.yul\":7349:7357   */\n      0x00\n        /* \"#utility.yul\":7396:7401   */\n      dup2\n        /* \"#utility.yul\":7393:7394   */\n      0x01\n        /* \"#utility.yul\":7389:7402   */\n      shr\n        /* \"#utility.yul\":7368:7402   */\n      swap1\n      pop\n        /* \"#utility.yul\":7307:7409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7415:8263   */\n    tag_214:\n        /* \"#utility.yul\":7476:7481   */\n      0x00\n        /* \"#utility.yul\":7483:7487   */\n      dup1\n        /* \"#utility.yul\":7507:7513   */\n      dup3\n        /* \"#utility.yul\":7498:7513   */\n      swap2\n      pop\n        /* \"#utility.yul\":7531:7536   */\n      dup4\n        /* \"#utility.yul\":7522:7536   */\n      swap1\n      pop\n        /* \"#utility.yul\":7545:8257   */\n    tag_314:\n        /* \"#utility.yul\":7566:7567   */\n      0x01\n        /* \"#utility.yul\":7556:7564   */\n      dup6\n        /* \"#utility.yul\":7553:7568   */\n      gt\n        /* \"#utility.yul\":7545:8257   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":7661:7665   */\n      dup1\n        /* \"#utility.yul\":7656:7659   */\n      dup7\n        /* \"#utility.yul\":7652:7666   */\n      div\n        /* \"#utility.yul\":7646:7650   */\n      dup2\n        /* \"#utility.yul\":7643:7667   */\n      gt\n        /* \"#utility.yul\":7640:7690   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7670:7688   */\n      tag_318\n      tag_212\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7640:7690   */\n    tag_317:\n        /* \"#utility.yul\":7720:7721   */\n      0x01\n        /* \"#utility.yul\":7710:7718   */\n      dup6\n        /* \"#utility.yul\":7706:7722   */\n      and\n        /* \"#utility.yul\":7703:8154   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":8135:8139   */\n      dup1\n        /* \"#utility.yul\":8128:8133   */\n      dup3\n        /* \"#utility.yul\":8124:8140   */\n      mul\n        /* \"#utility.yul\":8115:8140   */\n      swap2\n      pop\n        /* \"#utility.yul\":7703:8154   */\n    tag_319:\n        /* \"#utility.yul\":8185:8189   */\n      dup1\n        /* \"#utility.yul\":8179:8183   */\n      dup2\n        /* \"#utility.yul\":8175:8190   */\n      mul\n        /* \"#utility.yul\":8167:8190   */\n      swap1\n      pop\n        /* \"#utility.yul\":8215:8247   */\n      tag_320\n        /* \"#utility.yul\":8238:8246   */\n      dup6\n        /* \"#utility.yul\":8215:8247   */\n      tag_213\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8203:8247   */\n      swap5\n      pop\n        /* \"#utility.yul\":7545:8257   */\n      jump(tag_314)\n    tag_316:\n        /* \"#utility.yul\":7415:8263   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8269:9342   */\n    tag_215:\n        /* \"#utility.yul\":8323:8328   */\n      0x00\n        /* \"#utility.yul\":8514:8522   */\n      dup3\n        /* \"#utility.yul\":8504:8544   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":8535:8536   */\n      0x01\n        /* \"#utility.yul\":8526:8536   */\n      swap1\n      pop\n        /* \"#utility.yul\":8537:8542   */\n      jump(tag_321)\n        /* \"#utility.yul\":8504:8544   */\n    tag_322:\n        /* \"#utility.yul\":8563:8567   */\n      dup2\n        /* \"#utility.yul\":8553:8589   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":8580:8581   */\n      0x00\n        /* \"#utility.yul\":8571:8581   */\n      swap1\n      pop\n        /* \"#utility.yul\":8582:8587   */\n      jump(tag_321)\n        /* \"#utility.yul\":8553:8589   */\n    tag_323:\n        /* \"#utility.yul\":8649:8653   */\n      dup2\n        /* \"#utility.yul\":8697:8698   */\n      0x01\n        /* \"#utility.yul\":8692:8719   */\n      dup2\n      eq\n      tag_325\n      jumpi\n        /* \"#utility.yul\":8733:8734   */\n      0x02\n        /* \"#utility.yul\":8728:8919   */\n      dup2\n      eq\n      tag_326\n      jumpi\n        /* \"#utility.yul\":8642:8919   */\n      jump(tag_324)\n        /* \"#utility.yul\":8692:8719   */\n    tag_325:\n        /* \"#utility.yul\":8710:8711   */\n      0x01\n        /* \"#utility.yul\":8701:8711   */\n      swap2\n      pop\n        /* \"#utility.yul\":8712:8717   */\n      pop\n      jump(tag_321)\n        /* \"#utility.yul\":8728:8919   */\n    tag_326:\n        /* \"#utility.yul\":8773:8776   */\n      0xff\n        /* \"#utility.yul\":8763:8771   */\n      dup5\n        /* \"#utility.yul\":8760:8777   */\n      gt\n        /* \"#utility.yul\":8757:8800   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":8780:8798   */\n      tag_328\n      tag_212\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8757:8800   */\n    tag_327:\n        /* \"#utility.yul\":8829:8837   */\n      dup4\n        /* \"#utility.yul\":8826:8827   */\n      0x02\n        /* \"#utility.yul\":8822:8838   */\n      exp\n        /* \"#utility.yul\":8813:8838   */\n      swap2\n      pop\n        /* \"#utility.yul\":8864:8867   */\n      dup5\n        /* \"#utility.yul\":8857:8862   */\n      dup3\n        /* \"#utility.yul\":8854:8868   */\n      gt\n        /* \"#utility.yul\":8851:8891   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":8871:8889   */\n      tag_330\n      tag_212\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8851:8891   */\n    tag_329:\n        /* \"#utility.yul\":8904:8909   */\n      pop\n      jump(tag_321)\n        /* \"#utility.yul\":8642:8919   */\n    tag_324:\n      pop\n        /* \"#utility.yul\":9028:9030   */\n      0x20\n        /* \"#utility.yul\":9018:9026   */\n      dup4\n        /* \"#utility.yul\":9015:9031   */\n      lt\n        /* \"#utility.yul\":9009:9012   */\n      0x0133\n        /* \"#utility.yul\":9003:9007   */\n      dup4\n        /* \"#utility.yul\":9000:9013   */\n      lt\n        /* \"#utility.yul\":8996:9032   */\n      and\n        /* \"#utility.yul\":8978:8980   */\n      0x4e\n        /* \"#utility.yul\":8968:8976   */\n      dup5\n        /* \"#utility.yul\":8965:8981   */\n      lt\n        /* \"#utility.yul\":8960:8962   */\n      0x0b\n        /* \"#utility.yul\":8954:8958   */\n      dup5\n        /* \"#utility.yul\":8951:8963   */\n      lt\n        /* \"#utility.yul\":8947:8982   */\n      and\n        /* \"#utility.yul\":8931:9042   */\n      or\n        /* \"#utility.yul\":8928:9174   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":9084:9092   */\n      dup3\n        /* \"#utility.yul\":9078:9082   */\n      dup3\n        /* \"#utility.yul\":9074:9093   */\n      exp\n        /* \"#utility.yul\":9065:9093   */\n      swap1\n      pop\n        /* \"#utility.yul\":9119:9122   */\n      dup4\n        /* \"#utility.yul\":9112:9117   */\n      dup2\n        /* \"#utility.yul\":9109:9123   */\n      gt\n        /* \"#utility.yul\":9106:9146   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":9126:9144   */\n      tag_333\n      tag_212\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9106:9146   */\n    tag_332:\n        /* \"#utility.yul\":9159:9164   */\n      jump(tag_321)\n        /* \"#utility.yul\":8928:9174   */\n    tag_331:\n        /* \"#utility.yul\":9199:9241   */\n      tag_334\n        /* \"#utility.yul\":9237:9240   */\n      dup5\n        /* \"#utility.yul\":9227:9235   */\n      dup5\n        /* \"#utility.yul\":9221:9225   */\n      dup5\n        /* \"#utility.yul\":9218:9219   */\n      0x01\n        /* \"#utility.yul\":9199:9241   */\n      tag_214\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9184:9241   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":9273:9277   */\n      dup2\n        /* \"#utility.yul\":9268:9271   */\n      dup5\n        /* \"#utility.yul\":9264:9278   */\n      div\n        /* \"#utility.yul\":9257:9262   */\n      dup2\n        /* \"#utility.yul\":9254:9279   */\n      gt\n        /* \"#utility.yul\":9251:9302   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":9282:9300   */\n      tag_336\n      tag_212\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9251:9302   */\n    tag_335:\n        /* \"#utility.yul\":9331:9335   */\n      dup2\n        /* \"#utility.yul\":9324:9329   */\n      dup2\n        /* \"#utility.yul\":9320:9336   */\n      mul\n        /* \"#utility.yul\":9311:9336   */\n      swap1\n      pop\n        /* \"#utility.yul\":8269:9342   */\n    tag_321:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9348:9629   */\n    tag_86:\n        /* \"#utility.yul\":9406:9411   */\n      0x00\n        /* \"#utility.yul\":9430:9453   */\n      tag_338\n        /* \"#utility.yul\":9448:9452   */\n      dup3\n        /* \"#utility.yul\":9430:9453   */\n      tag_183\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9422:9453   */\n      swap2\n      pop\n        /* \"#utility.yul\":9474:9499   */\n      tag_339\n        /* \"#utility.yul\":9490:9498   */\n      dup4\n        /* \"#utility.yul\":9474:9499   */\n      tag_209\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9462:9499   */\n      swap3\n      pop\n        /* \"#utility.yul\":9518:9622   */\n      tag_340\n        /* \"#utility.yul\":9555:9621   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9545:9553   */\n      dup5\n        /* \"#utility.yul\":9539:9543   */\n      dup5\n        /* \"#utility.yul\":9518:9622   */\n      tag_215\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9509:9622   */\n      swap1\n      pop\n        /* \"#utility.yul\":9348:9629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9635:10045   */\n    tag_88:\n        /* \"#utility.yul\":9675:9682   */\n      0x00\n        /* \"#utility.yul\":9698:9718   */\n      tag_342\n        /* \"#utility.yul\":9716:9717   */\n      dup3\n        /* \"#utility.yul\":9698:9718   */\n      tag_183\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9693:9718   */\n      swap2\n      pop\n        /* \"#utility.yul\":9732:9752   */\n      tag_343\n        /* \"#utility.yul\":9750:9751   */\n      dup4\n        /* \"#utility.yul\":9732:9752   */\n      tag_183\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9727:9752   */\n      swap3\n      pop\n        /* \"#utility.yul\":9787:9788   */\n      dup3\n        /* \"#utility.yul\":9784:9785   */\n      dup3\n        /* \"#utility.yul\":9780:9789   */\n      mul\n        /* \"#utility.yul\":9809:9839   */\n      tag_344\n        /* \"#utility.yul\":9827:9838   */\n      dup2\n        /* \"#utility.yul\":9809:9839   */\n      tag_183\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9798:9839   */\n      swap2\n      pop\n        /* \"#utility.yul\":9988:9989   */\n      dup3\n        /* \"#utility.yul\":9979:9986   */\n      dup3\n        /* \"#utility.yul\":9975:9990   */\n      div\n        /* \"#utility.yul\":9972:9973   */\n      dup5\n        /* \"#utility.yul\":9969:9991   */\n      eq\n        /* \"#utility.yul\":9949:9950   */\n      dup4\n        /* \"#utility.yul\":9942:9951   */\n      iszero\n        /* \"#utility.yul\":9922:10005   */\n      or\n        /* \"#utility.yul\":9899:10038   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":10018:10036   */\n      tag_346\n      tag_212\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9899:10038   */\n    tag_345:\n        /* \"#utility.yul\":9683:10045   */\n      pop\n        /* \"#utility.yul\":9635:10045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10051:10231   */\n    tag_216:\n        /* \"#utility.yul\":10099:10176   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10096:10097   */\n      0x00\n        /* \"#utility.yul\":10089:10177   */\n      mstore\n        /* \"#utility.yul\":10196:10200   */\n      0x12\n        /* \"#utility.yul\":10193:10194   */\n      0x04\n        /* \"#utility.yul\":10186:10201   */\n      mstore\n        /* \"#utility.yul\":10220:10224   */\n      0x24\n        /* \"#utility.yul\":10217:10218   */\n      0x00\n        /* \"#utility.yul\":10210:10225   */\n      revert\n        /* \"#utility.yul\":10237:10422   */\n    tag_90:\n        /* \"#utility.yul\":10277:10278   */\n      0x00\n        /* \"#utility.yul\":10294:10314   */\n      tag_349\n        /* \"#utility.yul\":10312:10313   */\n      dup3\n        /* \"#utility.yul\":10294:10314   */\n      tag_183\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10289:10314   */\n      swap2\n      pop\n        /* \"#utility.yul\":10328:10348   */\n      tag_350\n        /* \"#utility.yul\":10346:10347   */\n      dup4\n        /* \"#utility.yul\":10328:10348   */\n      tag_183\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":10323:10348   */\n      swap3\n      pop\n        /* \"#utility.yul\":10367:10368   */\n      dup3\n        /* \"#utility.yul\":10357:10392   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":10372:10390   */\n      tag_352\n      tag_216\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10357:10392   */\n    tag_351:\n        /* \"#utility.yul\":10414:10415   */\n      dup3\n        /* \"#utility.yul\":10411:10412   */\n      dup3\n        /* \"#utility.yul\":10407:10416   */\n      div\n        /* \"#utility.yul\":10402:10416   */\n      swap1\n      pop\n        /* \"#utility.yul\":10237:10422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10428:10760   */\n    tag_92:\n        /* \"#utility.yul\":10549:10553   */\n      0x00\n        /* \"#utility.yul\":10587:10589   */\n      0x40\n        /* \"#utility.yul\":10576:10585   */\n      dup3\n        /* \"#utility.yul\":10572:10590   */\n      add\n        /* \"#utility.yul\":10564:10590   */\n      swap1\n      pop\n        /* \"#utility.yul\":10600:10671   */\n      tag_354\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10657:10666   */\n      dup4\n        /* \"#utility.yul\":10653:10670   */\n      add\n        /* \"#utility.yul\":10644:10650   */\n      dup6\n        /* \"#utility.yul\":10600:10671   */\n      tag_201\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10681:10753   */\n      tag_355\n        /* \"#utility.yul\":10749:10751   */\n      0x20\n        /* \"#utility.yul\":10738:10747   */\n      dup4\n        /* \"#utility.yul\":10734:10752   */\n      add\n        /* \"#utility.yul\":10725:10731   */\n      dup5\n        /* \"#utility.yul\":10681:10753   */\n      tag_184\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10428:10760   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10766:10957   */\n    tag_97:\n        /* \"#utility.yul\":10806:10809   */\n      0x00\n        /* \"#utility.yul\":10825:10845   */\n      tag_357\n        /* \"#utility.yul\":10843:10844   */\n      dup3\n        /* \"#utility.yul\":10825:10845   */\n      tag_183\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10820:10845   */\n      swap2\n      pop\n        /* \"#utility.yul\":10859:10879   */\n      tag_358\n        /* \"#utility.yul\":10877:10878   */\n      dup4\n        /* \"#utility.yul\":10859:10879   */\n      tag_183\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10854:10879   */\n      swap3\n      pop\n        /* \"#utility.yul\":10902:10903   */\n      dup3\n        /* \"#utility.yul\":10899:10900   */\n      dup3\n        /* \"#utility.yul\":10895:10904   */\n      add\n        /* \"#utility.yul\":10888:10904   */\n      swap1\n      pop\n        /* \"#utility.yul\":10923:10926   */\n      dup1\n        /* \"#utility.yul\":10920:10921   */\n      dup3\n        /* \"#utility.yul\":10917:10927   */\n      gt\n        /* \"#utility.yul\":10914:10950   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":10930:10948   */\n      tag_360\n      tag_212\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10914:10950   */\n    tag_359:\n        /* \"#utility.yul\":10766:10957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10963:11405   */\n    tag_101:\n        /* \"#utility.yul\":11112:11116   */\n      0x00\n        /* \"#utility.yul\":11150:11152   */\n      0x60\n        /* \"#utility.yul\":11139:11148   */\n      dup3\n        /* \"#utility.yul\":11135:11153   */\n      add\n        /* \"#utility.yul\":11127:11153   */\n      swap1\n      pop\n        /* \"#utility.yul\":11163:11234   */\n      tag_362\n        /* \"#utility.yul\":11231:11232   */\n      0x00\n        /* \"#utility.yul\":11220:11229   */\n      dup4\n        /* \"#utility.yul\":11216:11233   */\n      add\n        /* \"#utility.yul\":11207:11213   */\n      dup7\n        /* \"#utility.yul\":11163:11234   */\n      tag_184\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":11244:11316   */\n      tag_363\n        /* \"#utility.yul\":11312:11314   */\n      0x20\n        /* \"#utility.yul\":11301:11310   */\n      dup4\n        /* \"#utility.yul\":11297:11315   */\n      add\n        /* \"#utility.yul\":11288:11294   */\n      dup6\n        /* \"#utility.yul\":11244:11316   */\n      tag_184\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11326:11398   */\n      tag_364\n        /* \"#utility.yul\":11394:11396   */\n      0x40\n        /* \"#utility.yul\":11383:11392   */\n      dup4\n        /* \"#utility.yul\":11379:11397   */\n      add\n        /* \"#utility.yul\":11370:11376   */\n      dup5\n        /* \"#utility.yul\":11326:11398   */\n      tag_184\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10963:11405   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11411:11576   */\n    tag_217:\n        /* \"#utility.yul\":11551:11568   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":11547:11548   */\n      0x00\n        /* \"#utility.yul\":11539:11545   */\n      dup3\n        /* \"#utility.yul\":11535:11549   */\n      add\n        /* \"#utility.yul\":11528:11569   */\n      mstore\n        /* \"#utility.yul\":11411:11576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11582:11948   */\n    tag_218:\n        /* \"#utility.yul\":11724:11727   */\n      0x00\n        /* \"#utility.yul\":11745:11812   */\n      tag_367\n        /* \"#utility.yul\":11809:11811   */\n      0x0f\n        /* \"#utility.yul\":11804:11807   */\n      dup4\n        /* \"#utility.yul\":11745:11812   */\n      tag_206\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11738:11812   */\n      swap2\n      pop\n        /* \"#utility.yul\":11821:11914   */\n      tag_368\n        /* \"#utility.yul\":11910:11913   */\n      dup3\n        /* \"#utility.yul\":11821:11914   */\n      tag_217\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11939:11941   */\n      0x20\n        /* \"#utility.yul\":11934:11937   */\n      dup3\n        /* \"#utility.yul\":11930:11942   */\n      add\n        /* \"#utility.yul\":11923:11942   */\n      swap1\n      pop\n        /* \"#utility.yul\":11582:11948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11954:12373   */\n    tag_113:\n        /* \"#utility.yul\":12120:12124   */\n      0x00\n        /* \"#utility.yul\":12158:12160   */\n      0x20\n        /* \"#utility.yul\":12147:12156   */\n      dup3\n        /* \"#utility.yul\":12143:12161   */\n      add\n        /* \"#utility.yul\":12135:12161   */\n      swap1\n      pop\n        /* \"#utility.yul\":12207:12216   */\n      dup2\n        /* \"#utility.yul\":12201:12205   */\n      dup2\n        /* \"#utility.yul\":12197:12217   */\n      sub\n        /* \"#utility.yul\":12193:12194   */\n      0x00\n        /* \"#utility.yul\":12182:12191   */\n      dup4\n        /* \"#utility.yul\":12178:12195   */\n      add\n        /* \"#utility.yul\":12171:12218   */\n      mstore\n        /* \"#utility.yul\":12235:12366   */\n      tag_370\n        /* \"#utility.yul\":12361:12365   */\n      dup2\n        /* \"#utility.yul\":12235:12366   */\n      tag_218\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":12227:12366   */\n      swap1\n      pop\n        /* \"#utility.yul\":11954:12373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12379:12554   */\n    tag_219:\n        /* \"#utility.yul\":12519:12546   */\n      0x5a65726f20646f6e6174696f6e206e6f7420616c6c6f77656400000000000000\n        /* \"#utility.yul\":12515:12516   */\n      0x00\n        /* \"#utility.yul\":12507:12513   */\n      dup3\n        /* \"#utility.yul\":12503:12517   */\n      add\n        /* \"#utility.yul\":12496:12547   */\n      mstore\n        /* \"#utility.yul\":12379:12554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12560:12926   */\n    tag_220:\n        /* \"#utility.yul\":12702:12705   */\n      0x00\n        /* \"#utility.yul\":12723:12790   */\n      tag_373\n        /* \"#utility.yul\":12787:12789   */\n      0x19\n        /* \"#utility.yul\":12782:12785   */\n      dup4\n        /* \"#utility.yul\":12723:12790   */\n      tag_206\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12716:12790   */\n      swap2\n      pop\n        /* \"#utility.yul\":12799:12892   */\n      tag_374\n        /* \"#utility.yul\":12888:12891   */\n      dup3\n        /* \"#utility.yul\":12799:12892   */\n      tag_219\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":12917:12919   */\n      0x20\n        /* \"#utility.yul\":12912:12915   */\n      dup3\n        /* \"#utility.yul\":12908:12920   */\n      add\n        /* \"#utility.yul\":12901:12920   */\n      swap1\n      pop\n        /* \"#utility.yul\":12560:12926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12932:13351   */\n    tag_126:\n        /* \"#utility.yul\":13098:13102   */\n      0x00\n        /* \"#utility.yul\":13136:13138   */\n      0x20\n        /* \"#utility.yul\":13125:13134   */\n      dup3\n        /* \"#utility.yul\":13121:13139   */\n      add\n        /* \"#utility.yul\":13113:13139   */\n      swap1\n      pop\n        /* \"#utility.yul\":13185:13194   */\n      dup2\n        /* \"#utility.yul\":13179:13183   */\n      dup2\n        /* \"#utility.yul\":13175:13195   */\n      sub\n        /* \"#utility.yul\":13171:13172   */\n      0x00\n        /* \"#utility.yul\":13160:13169   */\n      dup4\n        /* \"#utility.yul\":13156:13173   */\n      add\n        /* \"#utility.yul\":13149:13196   */\n      mstore\n        /* \"#utility.yul\":13213:13344   */\n      tag_376\n        /* \"#utility.yul\":13339:13343   */\n      dup2\n        /* \"#utility.yul\":13213:13344   */\n      tag_220\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":13205:13344   */\n      swap1\n      pop\n        /* \"#utility.yul\":12932:13351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13357:13504   */\n    tag_221:\n        /* \"#utility.yul\":13458:13469   */\n      0x00\n        /* \"#utility.yul\":13495:13498   */\n      dup2\n        /* \"#utility.yul\":13480:13498   */\n      swap1\n      pop\n        /* \"#utility.yul\":13357:13504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13510:13624   */\n    tag_222:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13630:14028   */\n    tag_223:\n        /* \"#utility.yul\":13789:13792   */\n      0x00\n        /* \"#utility.yul\":13810:13893   */\n      tag_380\n        /* \"#utility.yul\":13891:13892   */\n      0x00\n        /* \"#utility.yul\":13886:13889   */\n      dup4\n        /* \"#utility.yul\":13810:13893   */\n      tag_221\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":13803:13893   */\n      swap2\n      pop\n        /* \"#utility.yul\":13902:13995   */\n      tag_381\n        /* \"#utility.yul\":13991:13994   */\n      dup3\n        /* \"#utility.yul\":13902:13995   */\n      tag_222\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":14020:14021   */\n      0x00\n        /* \"#utility.yul\":14015:14018   */\n      dup3\n        /* \"#utility.yul\":14011:14022   */\n      add\n        /* \"#utility.yul\":14004:14022   */\n      swap1\n      pop\n        /* \"#utility.yul\":13630:14028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14034:14413   */\n    tag_128:\n        /* \"#utility.yul\":14218:14221   */\n      0x00\n        /* \"#utility.yul\":14240:14387   */\n      tag_383\n        /* \"#utility.yul\":14383:14386   */\n      dup3\n        /* \"#utility.yul\":14240:14387   */\n      tag_223\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":14233:14387   */\n      swap2\n      pop\n        /* \"#utility.yul\":14404:14407   */\n      dup2\n        /* \"#utility.yul\":14397:14407   */\n      swap1\n      pop\n        /* \"#utility.yul\":14034:14413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14419:14588   */\n    tag_224:\n        /* \"#utility.yul\":14559:14580   */\n      0x504f4c207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":14555:14556   */\n      0x00\n        /* \"#utility.yul\":14547:14553   */\n      dup3\n        /* \"#utility.yul\":14543:14557   */\n      add\n        /* \"#utility.yul\":14536:14581   */\n      mstore\n        /* \"#utility.yul\":14419:14588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14594:14960   */\n    tag_225:\n        /* \"#utility.yul\":14736:14739   */\n      0x00\n        /* \"#utility.yul\":14757:14824   */\n      tag_386\n        /* \"#utility.yul\":14821:14823   */\n      0x13\n        /* \"#utility.yul\":14816:14819   */\n      dup4\n        /* \"#utility.yul\":14757:14824   */\n      tag_206\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":14750:14824   */\n      swap2\n      pop\n        /* \"#utility.yul\":14833:14926   */\n      tag_387\n        /* \"#utility.yul\":14922:14925   */\n      dup3\n        /* \"#utility.yul\":14833:14926   */\n      tag_224\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":14951:14953   */\n      0x20\n        /* \"#utility.yul\":14946:14949   */\n      dup3\n        /* \"#utility.yul\":14942:14954   */\n      add\n        /* \"#utility.yul\":14935:14954   */\n      swap1\n      pop\n        /* \"#utility.yul\":14594:14960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14966:15385   */\n    tag_134:\n        /* \"#utility.yul\":15132:15136   */\n      0x00\n        /* \"#utility.yul\":15170:15172   */\n      0x20\n        /* \"#utility.yul\":15159:15168   */\n      dup3\n        /* \"#utility.yul\":15155:15173   */\n      add\n        /* \"#utility.yul\":15147:15173   */\n      swap1\n      pop\n        /* \"#utility.yul\":15219:15228   */\n      dup2\n        /* \"#utility.yul\":15213:15217   */\n      dup2\n        /* \"#utility.yul\":15209:15229   */\n      sub\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15194:15203   */\n      dup4\n        /* \"#utility.yul\":15190:15207   */\n      add\n        /* \"#utility.yul\":15183:15230   */\n      mstore\n        /* \"#utility.yul\":15247:15378   */\n      tag_389\n        /* \"#utility.yul\":15373:15377   */\n      dup2\n        /* \"#utility.yul\":15247:15378   */\n      tag_225\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":15239:15378   */\n      swap1\n      pop\n        /* \"#utility.yul\":14966:15385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15391:15833   */\n    tag_148:\n        /* \"#utility.yul\":15540:15544   */\n      0x00\n        /* \"#utility.yul\":15578:15580   */\n      0x60\n        /* \"#utility.yul\":15567:15576   */\n      dup3\n        /* \"#utility.yul\":15563:15581   */\n      add\n        /* \"#utility.yul\":15555:15581   */\n      swap1\n      pop\n        /* \"#utility.yul\":15591:15662   */\n      tag_391\n        /* \"#utility.yul\":15659:15660   */\n      0x00\n        /* \"#utility.yul\":15648:15657   */\n      dup4\n        /* \"#utility.yul\":15644:15661   */\n      add\n        /* \"#utility.yul\":15635:15641   */\n      dup7\n        /* \"#utility.yul\":15591:15662   */\n      tag_201\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":15672:15744   */\n      tag_392\n        /* \"#utility.yul\":15740:15742   */\n      0x20\n        /* \"#utility.yul\":15729:15738   */\n      dup4\n        /* \"#utility.yul\":15725:15743   */\n      add\n        /* \"#utility.yul\":15716:15722   */\n      dup6\n        /* \"#utility.yul\":15672:15744   */\n      tag_201\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":15754:15826   */\n      tag_393\n        /* \"#utility.yul\":15822:15824   */\n      0x40\n        /* \"#utility.yul\":15811:15820   */\n      dup4\n        /* \"#utility.yul\":15807:15825   */\n      add\n        /* \"#utility.yul\":15798:15804   */\n      dup5\n        /* \"#utility.yul\":15754:15826   */\n      tag_184\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":15391:15833   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15839:16019   */\n    tag_156:\n        /* \"#utility.yul\":15887:15964   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15884:15885   */\n      0x00\n        /* \"#utility.yul\":15877:15965   */\n      mstore\n        /* \"#utility.yul\":15984:15988   */\n      0x32\n        /* \"#utility.yul\":15981:15982   */\n      0x04\n        /* \"#utility.yul\":15974:15989   */\n      mstore\n        /* \"#utility.yul\":16008:16012   */\n      0x24\n        /* \"#utility.yul\":16005:16006   */\n      0x00\n        /* \"#utility.yul\":15998:16013   */\n      revert\n        /* \"#utility.yul\":16025:16357   */\n    tag_164:\n        /* \"#utility.yul\":16146:16150   */\n      0x00\n        /* \"#utility.yul\":16184:16186   */\n      0x40\n        /* \"#utility.yul\":16173:16182   */\n      dup3\n        /* \"#utility.yul\":16169:16187   */\n      add\n        /* \"#utility.yul\":16161:16187   */\n      swap1\n      pop\n        /* \"#utility.yul\":16197:16268   */\n      tag_396\n        /* \"#utility.yul\":16265:16266   */\n      0x00\n        /* \"#utility.yul\":16254:16263   */\n      dup4\n        /* \"#utility.yul\":16250:16267   */\n      add\n        /* \"#utility.yul\":16241:16247   */\n      dup6\n        /* \"#utility.yul\":16197:16268   */\n      tag_184\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":16278:16350   */\n      tag_397\n        /* \"#utility.yul\":16346:16348   */\n      0x20\n        /* \"#utility.yul\":16335:16344   */\n      dup4\n        /* \"#utility.yul\":16331:16349   */\n      add\n        /* \"#utility.yul\":16322:16328   */\n      dup5\n        /* \"#utility.yul\":16278:16350   */\n      tag_184\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":16025:16357   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16363:16596   */\n    tag_167:\n        /* \"#utility.yul\":16402:16405   */\n      0x00\n        /* \"#utility.yul\":16425:16449   */\n      tag_399\n        /* \"#utility.yul\":16443:16448   */\n      dup3\n        /* \"#utility.yul\":16425:16449   */\n      tag_183\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":16416:16449   */\n      swap2\n      pop\n        /* \"#utility.yul\":16471:16537   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16464:16469   */\n      dup3\n        /* \"#utility.yul\":16461:16538   */\n      sub\n        /* \"#utility.yul\":16458:16561   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":16541:16559   */\n      tag_401\n      tag_212\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16458:16561   */\n    tag_400:\n        /* \"#utility.yul\":16588:16589   */\n      0x01\n        /* \"#utility.yul\":16581:16586   */\n      dup3\n        /* \"#utility.yul\":16577:16590   */\n      add\n        /* \"#utility.yul\":16570:16590   */\n      swap1\n      pop\n        /* \"#utility.yul\":16363:16596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a80fdc270bf5541eb60ef2d77963f947250945d00ee1cb7396b513ded48be76464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_993": {
									"entryPoint": null,
									"id": 993,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 828,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_addresst_addresst_address_fromMemory": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5553:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "511:7:10",
														"type": ""
													}
												],
												"src": "466:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "692:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:10"
															},
															"nodeType": "YulIf",
															"src": "637:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:10",
														"type": ""
													}
												],
												"src": "576:138:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "791:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "801:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "867:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "832:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "785:5:10",
														"type": ""
													}
												],
												"src": "720:159:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "930:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "940:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "969:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "951:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "940:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "922:7:10",
														"type": ""
													}
												],
												"src": "885:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1030:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1087:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1099:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1089:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1089:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1089:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1053:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1078:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1060:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1060:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1050:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:43:10"
															},
															"nodeType": "YulIf",
															"src": "1040:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1023:5:10",
														"type": ""
													}
												],
												"src": "987:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1178:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1188:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1203:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1246:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1219:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1219:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1219:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1156:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1164:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1172:5:10",
														"type": ""
													}
												],
												"src": "1115:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1400:700:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1447:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1449:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1449:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1421:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1442:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:33:10"
															},
															"nodeType": "YulIf",
															"src": "1410:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1540:136:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1555:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1559:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1584:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1638:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1649:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1634:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1634:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1658:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1594:39:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1594:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1584:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1686:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1701:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1705:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1731:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1777:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1788:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1773:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1741:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1741:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1731:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1825:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1854:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1964:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1979:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1993:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1983:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2009:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2055:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2066:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2051:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2051:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2075:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2019:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2009:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1346:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1357:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1369:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1377:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1385:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1393:6:10",
														"type": ""
													}
												],
												"src": "1264:836:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2171:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2188:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2193:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2159:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2166:3:10",
														"type": ""
													}
												],
												"src": "2106:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2328:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2338:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2350:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2338:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2418:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2431:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2442:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2427:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2374:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2374:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2300:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2312:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2323:4:10",
														"type": ""
													}
												],
												"src": "2230:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2554:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2571:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2564:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2592:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2611:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2592:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2526:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2531:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2542:11:10",
														"type": ""
													}
												],
												"src": "2458:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2739:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2761:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2769:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2757:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792077616c6c6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2773:25:10",
																		"type": "",
																		"value": "Invalid treasury wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2731:6:10",
														"type": ""
													}
												],
												"src": "2633:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2968:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3034:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3039:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2975:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3140:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																	"nodeType": "YulIdentifier",
																	"src": "3051:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3051:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3153:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3164:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2946:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2954:3:10",
														"type": ""
													}
												],
												"src": "2812:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3355:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3365:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3377:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3388:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3365:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3423:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3431:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3427:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3457:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3591:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3465:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3457:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3335:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3350:4:10",
														"type": ""
													}
												],
												"src": "3184:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3715:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3745:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3733:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3733:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3749:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3707:6:10",
														"type": ""
													}
												],
												"src": "3609:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3942:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4008:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3949:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3942:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4114:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nodeType": "YulIdentifier",
																	"src": "4025:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4025:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4127:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4138:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4134:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3928:3:10",
														"type": ""
													}
												],
												"src": "3786:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4329:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4339:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4386:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4397:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4382:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4405:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4375:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4375:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4431:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4565:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4439:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4431:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4309:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4324:4:10",
														"type": ""
													}
												],
												"src": "4158:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4711:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4719:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4707:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4707:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420555344542061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4723:22:10",
																		"type": "",
																		"value": "Invalid USDT address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4700:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4681:6:10",
														"type": ""
													}
												],
												"src": "4583:170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4905:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4915:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4981:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4986:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4922:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4915:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5087:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
																	"nodeType": "YulIdentifier",
																	"src": "4998:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4998:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5100:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5111:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5116:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5100:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4893:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4901:3:10",
														"type": ""
													}
												],
												"src": "4759:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5312:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5359:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5370:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5378:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5348:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5404:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5538:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5412:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5412:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5404:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5282:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5297:4:10",
														"type": ""
													}
												],
												"src": "5131:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid USDT address\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH4 0x3B9ACA00 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x12A05F200 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x2540BE400 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0xBA43B7400 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 SWAP1 PUSH1 0x4 PUSH3 0x66 SWAP3 SWAP2 SWAP1 PUSH3 0x3FD JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C76 CODESIZE SUB DUP1 PUSH3 0x1C76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x99 SWAP2 SWAP1 PUSH3 0x51A JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x10D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x104 SWAP2 SWAP1 PUSH3 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x11E DUP2 PUSH3 0x33C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x187 SWAP1 PUSH3 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1F8 SWAP1 PUSH3 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x272 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x269 SWAP1 PUSH3 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x70F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x443 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x442 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH5 0xFFFFFFFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x41C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x452 SWAP2 SWAP1 PUSH3 0x456 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x46F JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x457 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4A2 DUP3 PUSH3 0x477 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B4 DUP2 PUSH3 0x496 JUMP JUMPDEST DUP2 EQ PUSH3 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x4D2 DUP2 PUSH3 0x4A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4E4 DUP3 PUSH3 0x477 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4F6 DUP2 PUSH3 0x4D8 JUMP JUMPDEST DUP2 EQ PUSH3 0x501 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x514 DUP2 PUSH3 0x4EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x535 JUMPI PUSH3 0x534 PUSH3 0x473 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x544 DUP8 DUP3 DUP9 ADD PUSH3 0x4C2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x557 DUP8 DUP3 DUP9 ADD PUSH3 0x504 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x56A DUP8 DUP3 DUP9 ADD PUSH3 0x504 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x57D DUP8 DUP3 DUP9 ADD PUSH3 0x504 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x594 DUP2 PUSH3 0x4D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5AF PUSH0 DUP4 ADD DUP5 PUSH3 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642074726561737572792077616C6C6574000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x5FB PUSH1 0x17 DUP4 PUSH3 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH3 0x608 DUP3 PUSH3 0x5C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x62C DUP2 PUSH3 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x669 PUSH1 0x15 DUP4 PUSH3 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH3 0x676 DUP3 PUSH3 0x633 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x69A DUP2 PUSH3 0x65B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420555344542061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x6D7 PUSH1 0x14 DUP4 PUSH3 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH3 0x6E4 DUP3 PUSH3 0x6A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x708 DUP2 PUSH3 0x6C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1559 DUP1 PUSH3 0x71D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x809D458D GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB0304813 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB0304813 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xE89E4ED6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xF8D0BB6F EQ PUSH2 0x2B4 JUMPI PUSH2 0xC0 JUMP JUMPDEST DUP1 PUSH4 0x809D458D EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x1FC JUMPI PUSH2 0xC0 JUMP JUMPDEST DUP1 PUSH3 0xB37044 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x14A8BD0D EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x5610ECA0 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x7E43C77D EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BC PUSH2 0x749 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32E SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A6 CALLER PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x98F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0xA PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP4 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP3 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x50A PUSH2 0xA11 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CE55F2081708DBEF7AC42C3785B4627CCD4AA19F21B694B54C92DF3D146996A DUP4 DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x556 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x56A PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x573 PUSH0 PUSH2 0xB59 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5A2 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CD PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x746 DUP2 PUSH2 0xB59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x810 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84B SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH8 0x16345785D8A0000 CALLVALUE PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x87C SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP3 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x903 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH5 0xE8D4A51000 CALLVALUE PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x937 PUSH2 0xA11 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C9AD9270AF0183A99BF47EE6BEEBCAD2FC6EF1992082283D76EC94947158B51 CALLVALUE DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x983 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xA0B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x9C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x4 SLOAD LT PUSH2 0xAB7 JUMPI PUSH1 0x1 DUP2 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0xE5F196B7C35531C9CDF28EE121967688B244C8557B574489A6182E8F66C929D3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA92 JUMPI PUSH2 0xA91 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xAAA SWAP3 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST DUP1 DUP1 PUSH2 0xAC7 SWAP1 PUSH2 0x14DC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xADA PUSH2 0xCB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF8 PUSH2 0x653 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH2 0xB1B PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xC52 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xC6D JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xCAF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCE DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE7 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD16 DUP3 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD26 DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH0 DUP4 ADD DUP5 PUSH2 0xD1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP2 EQ PUSH2 0xD5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6D DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD95 DUP5 DUP3 DUP6 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC1 PUSH2 0xDBC PUSH2 0xDB7 DUP5 PUSH2 0xCED JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD2 DUP3 PUSH2 0xDA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE3 DUP3 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0C PUSH0 DUP4 ADD DUP5 PUSH2 0xDEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1B DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP2 EQ PUSH2 0xE25 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE36 DUP2 PUSH2 0xE12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE51 JUMPI PUSH2 0xE50 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE5E DUP5 DUP3 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE71 DUP3 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE81 DUP2 PUSH2 0xE67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9A PUSH0 DUP4 ADD DUP5 PUSH2 0xE78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEAA DUP3 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBA DUP2 PUSH2 0xEA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED3 PUSH0 DUP4 ADD DUP5 PUSH2 0xEB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE2 DUP2 PUSH2 0xE67 JUMP JUMPDEST DUP2 EQ PUSH2 0xEEC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFD DUP2 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF17 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xEEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF72 PUSH1 0x1D DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0xF7D DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF9F DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBB DUP2 PUSH2 0xFA6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFD6 DUP2 PUSH2 0xFB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFFE DUP5 DUP3 DUP6 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1089 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1074 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1082 DUP6 PUSH2 0x1034 JUMP JUMPDEST SWAP5 POP PUSH2 0x1049 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10A1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x115C JUMP JUMPDEST DUP2 PUSH2 0x10AE JUMPI PUSH0 SWAP1 POP PUSH2 0x115C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x10C4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10CE JUMPI PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x115C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0x1007 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST POP PUSH2 0x115C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1132 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0x1007 JUMP JUMPDEST JUMPDEST PUSH2 0x115C JUMP JUMPDEST PUSH2 0x113F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116D DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1178 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP3 POP PUSH2 0x11A5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11B7 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x11C2 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11D0 DUP2 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11E7 JUMPI PUSH2 0x11E6 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1225 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1230 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1240 JUMPI PUSH2 0x123F PUSH2 0x11EE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x125E PUSH0 DUP4 ADD DUP6 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x126B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x127C DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1287 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x129F JUMPI PUSH2 0x129E PUSH2 0x1007 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12B8 PUSH0 DUP4 ADD DUP7 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x12C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x12D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x130E PUSH1 0xF DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1319 DUP3 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x133B DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20646F6E6174696F6E206E6F7420616C6C6F77656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1376 PUSH1 0x19 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 DUP3 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A3 DUP2 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x13C2 PUSH0 DUP4 PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP PUSH2 0x13CD DUP3 PUSH2 0x13B4 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP3 PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x504F4C207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x141F PUSH1 0x13 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x142A DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x144C DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1466 PUSH0 DUP4 ADD DUP7 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x1473 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x1480 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14C8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x14D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E6 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xF 0xDC 0x27 SIGNEXTEND CREATE2 SLOAD 0x1E 0xB6 0xE CALLCODE 0xD7 PUSH26 0x63F947250945D00EE1CB7396B513DED48BE76464736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "406:3596:9:-:0;;;797:189;;;;;;;;838:12;797:189;;;;;;882:12;797:189;;;;;;917:13;797:189;;;;;;953:13;797:189;;;;;;;;;;;;;:::i;:::-;;1316:537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1475:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1535:1:9::1;1508:29;;:15;:29;;::::0;1500:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1607:1;1584:25;;:11;:25;;::::0;1576:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:1;1654:24;;:10;:24;;::::0;1646:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1741:15;1724:14;;:32;;;;;;;;;;;;;;;;;;1792:11;1767:10;;:37;;;;;;;;;;;;;;;;;;1834:10;1815:9;;:30;;;;;;;;;;;;;;;;;;1316:537:::0;;;;406:3596;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;406:3596:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:96::-;922:7;951:24;969:5;951:24;:::i;:::-;940:35;;885:96;;;:::o;987:122::-;1060:24;1078:5;1060:24;:::i;:::-;1053:5;1050:35;1040:63;;1099:1;1096;1089:12;1040:63;987:122;:::o;1115:143::-;1172:5;1203:6;1197:13;1188:22;;1219:33;1246:5;1219:33;:::i;:::-;1115:143;;;;:::o;1264:836::-;1369:6;1377;1385;1393;1442:3;1430:9;1421:7;1417:23;1413:33;1410:120;;;1449:79;;:::i;:::-;1410:120;1569:1;1594:72;1658:7;1649:6;1638:9;1634:22;1594:72;:::i;:::-;1584:82;;1540:136;1715:2;1741:64;1797:7;1788:6;1777:9;1773:22;1741:64;:::i;:::-;1731:74;;1686:129;1854:2;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1825:129;1993:2;2019:64;2075:7;2066:6;2055:9;2051:22;2019:64;:::i;:::-;2009:74;;1964:129;1264:836;;;;;;;:::o;2106:118::-;2193:24;2211:5;2193:24;:::i;:::-;2188:3;2181:37;2106:118;;:::o;2230:222::-;2323:4;2361:2;2350:9;2346:18;2338:26;;2374:71;2442:1;2431:9;2427:17;2418:6;2374:71;:::i;:::-;2230:222;;;;:::o;2458:169::-;2542:11;2576:6;2571:3;2564:19;2616:4;2611:3;2607:14;2592:29;;2458:169;;;;:::o;2633:173::-;2773:25;2769:1;2761:6;2757:14;2750:49;2633:173;:::o;2812:366::-;2954:3;2975:67;3039:2;3034:3;2975:67;:::i;:::-;2968:74;;3051:93;3140:3;3051:93;:::i;:::-;3169:2;3164:3;3160:12;3153:19;;2812:366;;;:::o;3184:419::-;3350:4;3388:2;3377:9;3373:18;3365:26;;3437:9;3431:4;3427:20;3423:1;3412:9;3408:17;3401:47;3465:131;3591:4;3465:131;:::i;:::-;3457:139;;3184:419;;;:::o;3609:171::-;3749:23;3745:1;3737:6;3733:14;3726:47;3609:171;:::o;3786:366::-;3928:3;3949:67;4013:2;4008:3;3949:67;:::i;:::-;3942:74;;4025:93;4114:3;4025:93;:::i;:::-;4143:2;4138:3;4134:12;4127:19;;3786:366;;;:::o;4158:419::-;4324:4;4362:2;4351:9;4347:18;4339:26;;4411:9;4405:4;4401:20;4397:1;4386:9;4382:17;4375:47;4439:131;4565:4;4439:131;:::i;:::-;4431:139;;4158:419;;;:::o;4583:170::-;4723:22;4719:1;4711:6;4707:14;4700:46;4583:170;:::o;4759:366::-;4901:3;4922:67;4986:2;4981:3;4922:67;:::i;:::-;4915:74;;4998:93;5087:3;4998:93;:::i;:::-;5116:2;5111:3;5107:12;5100:19;;4759:366;;;:::o;5131:419::-;5297:4;5335:2;5324:9;5320:18;5312:26;;5384:9;5378:4;5374:20;5370:1;5359:9;5355:17;5348:47;5412:131;5538:4;5412:131;:::i;:::-;5404:139;;5131:419;;;:::o;406:3596:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EXCHANGE_RATE_878": {
									"entryPoint": 708,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_763": {
									"entryPoint": 3098,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkMilestone_1184": {
									"entryPoint": 2577,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2770,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_817": {
									"entryPoint": 3253,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2905,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentMilestone_906": {
									"entryPoint": 1695,
									"id": 906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donatePOL_1059": {
									"entryPoint": 1865,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donateUSDT_1123": {
									"entryPoint": 757,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@graceToken_872": {
									"entryPoint": 1397,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@milestones_904": {
									"entryPoint": 1701,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1619,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1378,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_413": {
									"entryPoint": 2447,
									"id": 413,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@totalDonated_880": {
									"entryPoint": 702,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1733,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryWallet_869": {
									"entryPoint": 720,
									"id": 869,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTreasuryWallet_1145": {
									"entryPoint": 1434,
									"id": 1145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdtToken_875": {
									"entryPoint": 1658,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IGraceToken_$861_to_t_address_fromStack": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IGraceToken_$861__to_t_address__fromStack_reversed": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IGraceToken_$861_to_t_address": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16599:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:10",
														"type": ""
													}
												],
												"src": "442:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:10",
														"type": ""
													}
												],
												"src": "574:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "782:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "813:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "787:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "760:3:10",
														"type": ""
													}
												],
												"src": "684:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:140:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "968:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "956:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1052:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1065:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1076:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "992:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:87:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "992:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "918:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "930:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "941:4:10",
														"type": ""
													}
												],
												"src": "832:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1132:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1142:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1152:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1142:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1125:6:10",
														"type": ""
													}
												],
												"src": "1092:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1296:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1519:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1528:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1531:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1521:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1521:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1521:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1485:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1510:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1492:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1492:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1482:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1482:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:43:10"
															},
															"nodeType": "YulIf",
															"src": "1472:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1455:5:10",
														"type": ""
													}
												],
												"src": "1419:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1599:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1609:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1631:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1618:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1609:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1674:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1647:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1577:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1585:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1593:5:10",
														"type": ""
													}
												],
												"src": "1547:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1758:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1804:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1806:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1806:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1806:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1779:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1788:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1775:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1775:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1771:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:32:10"
															},
															"nodeType": "YulIf",
															"src": "1768:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1897:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1912:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1916:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1941:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1976:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1987:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1972:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1972:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1996:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1951:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1941:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1728:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1739:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1751:6:10",
														"type": ""
													}
												],
												"src": "1692:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2076:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2045:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2055:3:10",
														"type": ""
													}
												],
												"src": "2027:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2163:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2221:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2203:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2203:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2194:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2194:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2176:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2163:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2133:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2143:9:10",
														"type": ""
													}
												],
												"src": "2093:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2301:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2311:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2355:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2324:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2311:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2281:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2291:9:10",
														"type": ""
													}
												],
												"src": "2241:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2452:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2462:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2475:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2475:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2462:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IGraceToken_$861_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2432:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2442:9:10",
														"type": ""
													}
												],
												"src": "2373:145:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2608:85:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2625:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2680:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IGraceToken_$861_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2630:49:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2630:56:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2618:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2618:69:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IGraceToken_$861_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2596:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2603:3:10",
														"type": ""
													}
												],
												"src": "2524:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2826:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2834:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2826:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2938:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2949:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IGraceToken_$861_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2862:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2862:90:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2862:90:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IGraceToken_$861__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2788:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2800:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:10",
														"type": ""
													}
												],
												"src": "2699:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3016:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3081:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3090:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3083:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3039:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3072:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "3046:25:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3046:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3036:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:51:10"
															},
															"nodeType": "YulIf",
															"src": "3026:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3009:5:10",
														"type": ""
													}
												],
												"src": "2965:138:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3169:95:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3179:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3201:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3188:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3179:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3252:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "3217:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3147:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3155:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3163:5:10",
														"type": ""
													}
												],
												"src": "3109:155:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:271:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3390:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3392:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3392:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3392:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3365:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3374:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3386:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:32:10"
															},
															"nodeType": "YulIf",
															"src": "3354:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3483:125:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3498:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3502:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3527:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3570:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3581:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3566:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3566:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3590:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "3537:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3537:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3527:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3314:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3325:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3337:6:10",
														"type": ""
													}
												],
												"src": "3270:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3666:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3676:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3687:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3676:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3648:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3658:7:10",
														"type": ""
													}
												],
												"src": "3621:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3788:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3805:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3828:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3810:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3776:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3783:3:10",
														"type": ""
													}
												],
												"src": "3723:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3945:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3955:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3967:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3955:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4035:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4048:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4059:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4044:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3991:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3991:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3917:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3929:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3940:4:10",
														"type": ""
													}
												],
												"src": "3847:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4149:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4159:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4203:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4172:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4159:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4129:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4139:9:10",
														"type": ""
													}
												],
												"src": "4075:140:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4300:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4317:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4367:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4322:44:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:64:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4288:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4295:3:10",
														"type": ""
													}
												],
												"src": "4221:159:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4498:138:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4508:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4520:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4508:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4602:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4626:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4611:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4544:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:85:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4544:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4482:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4493:4:10",
														"type": ""
													}
												],
												"src": "4386:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4685:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4708:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4733:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4715:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4715:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4705:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4705:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4698:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:43:10"
															},
															"nodeType": "YulIf",
															"src": "4695:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4678:5:10",
														"type": ""
													}
												],
												"src": "4642:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4822:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4832:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4854:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4841:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4832:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4897:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4870:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4870:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4800:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4808:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4816:5:10",
														"type": ""
													}
												],
												"src": "4770:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4981:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5027:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5029:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5029:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5029:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5002:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4994:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:32:10"
															},
															"nodeType": "YulIf",
															"src": "4991:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5120:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5135:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5149:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5139:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5164:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5199:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5210:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5195:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5195:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5219:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5174:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5164:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4951:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4962:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4974:6:10",
														"type": ""
													}
												],
												"src": "4915:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5363:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5384:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5403:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5408:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5384:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5318:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5323:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5334:11:10",
														"type": ""
													}
												],
												"src": "5250:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5531:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5553:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5565:31:10",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5523:6:10",
														"type": ""
													}
												],
												"src": "5425:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5756:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5766:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5832:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5773:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5766:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5938:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "5849:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5849:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5951:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5962:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5967:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5744:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5752:3:10",
														"type": ""
													}
												],
												"src": "5610:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6153:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6163:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6175:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6163:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6210:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6221:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6206:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6229:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6225:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6225:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6199:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6255:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6389:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6263:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6255:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6133:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6148:4:10",
														"type": ""
													}
												],
												"src": "5982:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6450:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6460:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6475:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6482:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6471:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6471:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6460:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6432:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6442:7:10",
														"type": ""
													}
												],
												"src": "6407:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6540:77:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6595:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6604:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6607:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6597:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6597:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6597:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6563:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6586:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "6570:15:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6570:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6560:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:41:10"
															},
															"nodeType": "YulIf",
															"src": "6550:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6533:5:10",
														"type": ""
													}
												],
												"src": "6499:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6684:78:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6694:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6703:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6694:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6750:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "6725:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6662:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6670:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6678:5:10",
														"type": ""
													}
												],
												"src": "6623:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6843:272:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6889:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6891:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6891:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6891:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6864:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6873:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6860:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6860:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6885:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6856:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:32:10"
															},
															"nodeType": "YulIf",
															"src": "6853:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6982:126:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6997:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7011:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7001:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7026:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7070:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7081:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7066:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7066:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7090:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7036:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7036:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7026:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6813:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6824:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6836:6:10",
														"type": ""
													}
												],
												"src": "6768:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7263:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7266:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7256:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7256:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7290:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7280:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7121:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7358:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7368:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7393:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7396:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7389:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7368:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7339:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7349:8:10",
														"type": ""
													}
												],
												"src": "7307:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7488:775:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7498:15:10",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "7507:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7498:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7522:14:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "7531:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7522:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7580:677:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7668:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7670:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7670:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7670:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7646:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7656:3:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "7661:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "7652:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7652:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7643:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7643:24:10"
																		},
																		"nodeType": "YulIf",
																		"src": "7640:50:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7735:419:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8115:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "8128:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "8135:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "8124:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8124:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "8115:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7710:8:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7720:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7706:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7706:16:10"
																		},
																		"nodeType": "YulIf",
																		"src": "7703:451:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8167:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8179:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8185:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "8175:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8175:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8167:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8203:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8238:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "8215:22:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8215:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "8203:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7556:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7566:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7553:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7569:2:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7549:3:10",
																"statements": []
															},
															"src": "7545:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "7443:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "7451:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7458:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7468:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7476:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7483:4:10",
														"type": ""
													}
												],
												"src": "7415:848:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8329:1013:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8524:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8526:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8535:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8526:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8537:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8514:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8507:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:16:10"
															},
															"nodeType": "YulIf",
															"src": "8504:40:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8569:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8571:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8580:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8571:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8582:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8563:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8556:12:10"
															},
															"nodeType": "YulIf",
															"src": "8553:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8699:20:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "8701:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8710:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8701:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8712:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8692:27:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8697:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8743:176:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8778:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8780:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8780:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8780:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8763:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8773:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8760:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8760:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8757:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8813:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8826:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8829:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "8822:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8822:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8813:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8869:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8871:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8871:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8871:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "8857:5:10"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "8864:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8854:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8854:14:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8851:40:10"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8904:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8728:191:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8733:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "8649:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "8642:277:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9051:123:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9065:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9078:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9084:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "9074:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9074:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9065:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9124:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "9126:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9126:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9126:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "9112:5:10"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "9119:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "9109:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9109:14:10"
																		},
																		"nodeType": "YulIf",
																		"src": "9106:40:10"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9159:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8954:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8960:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8951:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8951:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8968:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8978:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8965:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8965:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8947:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8947:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "9003:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9009:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9000:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9000:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "9018:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9028:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9015:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9015:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8996:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8996:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8931:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8931:111:10"
															},
															"nodeType": "YulIf",
															"src": "8928:246:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9218:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9221:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9227:8:10"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "9237:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "9199:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9184:5:10"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9191:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9280:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9282:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9282:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9282:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "9257:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "9268:3:10"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "9273:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "9264:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9264:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9254:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9254:25:10"
															},
															"nodeType": "YulIf",
															"src": "9251:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9311:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "9324:5:10"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9331:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9320:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9320:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9311:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8299:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8305:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "8315:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8323:5:10",
														"type": ""
													}
												],
												"src": "8269:1073:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9412:217:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9422:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9448:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9430:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9430:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9422:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9462:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9490:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9474:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "9462:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9509:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9539:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9545:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9555:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "9518:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9509:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9387:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9393:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9406:5:10",
														"type": ""
													}
												],
												"src": "9348:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9683:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9693:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9716:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9698:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9693:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9727:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9750:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9732:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9732:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9727:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9761:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9784:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9787:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9780:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9780:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9765:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9798:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9827:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9809:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9798:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10016:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10018:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10018:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10018:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9949:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9942:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9942:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9972:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9979:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9988:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9975:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9975:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9969:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9969:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9922:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9922:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9902:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9902:113:10"
															},
															"nodeType": "YulIf",
															"src": "9899:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9666:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9669:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9675:7:10",
														"type": ""
													}
												],
												"src": "9635:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10079:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10096:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10099:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10089:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10089:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10089:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10193:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10196:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10186:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10186:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10186:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10217:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10220:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10210:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10051:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10279:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10289:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10312:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10294:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10294:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10289:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10323:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10346:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10328:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10328:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10323:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10370:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10372:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10372:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10372:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10367:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10360:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10360:9:10"
															},
															"nodeType": "YulIf",
															"src": "10357:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10402:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10411:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10414:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10407:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10407:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10402:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10268:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10271:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10277:1:10",
														"type": ""
													}
												],
												"src": "10237:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10554:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10564:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10576:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10587:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10572:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10564:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10644:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10657:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10668:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10653:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10653:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10600:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10600:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10600:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10725:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10738:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10749:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10734:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10734:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10681:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10518:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10530:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10538:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10549:4:10",
														"type": ""
													}
												],
												"src": "10428:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10820:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10843:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10825:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10820:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10854:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10877:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10859:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10854:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10888:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10899:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10902:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10895:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10895:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10888:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10928:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10930:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10930:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10930:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10920:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10923:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10917:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10917:10:10"
															},
															"nodeType": "YulIf",
															"src": "10914:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10797:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10800:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10806:3:10",
														"type": ""
													}
												],
												"src": "10766:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11117:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11127:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11139:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11135:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11135:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11127:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11207:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11220:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11231:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11216:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11163:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11163:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11288:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11301:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11312:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11297:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11244:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11244:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11370:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11383:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11394:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11379:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11379:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11326:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11073:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11085:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11093:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11101:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11112:4:10",
														"type": ""
													}
												],
												"src": "10963:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11517:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11539:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11535:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11535:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11551:17:10",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11528:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11528:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11509:6:10",
														"type": ""
													}
												],
												"src": "11411:165:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11728:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11738:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11804:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11809:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11745:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11745:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11910:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nodeType": "YulIdentifier",
																	"src": "11821:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11821:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11923:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11934:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11939:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11930:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11930:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11923:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11716:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11724:3:10",
														"type": ""
													}
												],
												"src": "11582:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12125:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12135:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12143:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12143:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12135:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12182:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12193:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12178:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12201:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12207:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12197:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12197:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12171:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12171:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12227:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12361:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12235:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12227:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12105:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12120:4:10",
														"type": ""
													}
												],
												"src": "11954:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12485:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12507:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12515:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12503:14:10"
																	},
																	{
																		"hexValue": "5a65726f20646f6e6174696f6e206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12519:27:10",
																		"type": "",
																		"value": "Zero donation not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12496:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12477:6:10",
														"type": ""
													}
												],
												"src": "12379:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12706:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12716:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12782:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12787:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12723:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12723:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12716:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12888:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a",
																	"nodeType": "YulIdentifier",
																	"src": "12799:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12799:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12799:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12901:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12912:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12917:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12908:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12908:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12901:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12694:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12702:3:10",
														"type": ""
													}
												],
												"src": "12560:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13103:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13113:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13125:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13136:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13121:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13121:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13113:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13171:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13156:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13156:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13179:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13185:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13175:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13149:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13149:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13149:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13205:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13339:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13213:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13205:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13083:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13098:4:10",
														"type": ""
													}
												],
												"src": "12932:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13470:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13480:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13495:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13480:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13442:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13458:11:10",
														"type": ""
													}
												],
												"src": "13357:147:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13616:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13608:6:10",
														"type": ""
													}
												],
												"src": "13510:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13793:235:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13803:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13886:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13891:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13810:75:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13810:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13803:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13991:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "13902:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13902:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13902:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14004:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14015:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14020:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14011:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14004:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13781:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13789:3:10",
														"type": ""
													}
												],
												"src": "13630:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14222:191:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14233:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14383:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14240:141:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14240:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14233:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14397:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14404:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14397:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14209:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14218:3:10",
														"type": ""
													}
												],
												"src": "14034:379:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14525:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14547:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14555:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14543:14:10"
																	},
																	{
																		"hexValue": "504f4c207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14559:21:10",
																		"type": "",
																		"value": "POL transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14536:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14536:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14536:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14517:6:10",
														"type": ""
													}
												],
												"src": "14419:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14740:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14750:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14816:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14821:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14757:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14757:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14922:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b",
																	"nodeType": "YulIdentifier",
																	"src": "14833:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14833:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14935:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14946:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14951:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14942:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14942:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14935:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14728:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14736:3:10",
														"type": ""
													}
												],
												"src": "14594:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15137:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15147:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15159:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15155:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15147:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15194:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15205:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15190:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15190:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15213:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15219:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15209:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15209:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15183:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15183:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15183:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15239:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15373:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15247:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15247:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15239:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15117:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15132:4:10",
														"type": ""
													}
												],
												"src": "14966:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15545:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15555:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15567:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15578:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15563:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15563:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15555:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15635:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15648:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15659:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15644:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15644:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15591:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15591:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15591:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15716:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15729:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15740:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15725:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15725:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15672:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15672:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15672:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15798:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15811:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15822:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15807:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15754:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15754:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15754:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15501:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15513:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15521:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15529:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15540:4:10",
														"type": ""
													}
												],
												"src": "15391:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15867:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15884:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15887:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15877:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15877:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15877:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15981:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15974:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15974:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16005:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16008:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15998:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15998:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15998:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15839:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16151:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16161:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16173:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16184:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16169:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16169:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16161:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16241:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16254:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16265:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16250:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16197:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16197:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16197:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16322:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16335:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16346:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16331:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16331:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16278:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16278:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16278:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16115:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16127:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16135:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16146:4:10",
														"type": ""
													}
												],
												"src": "16025:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16406:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16416:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16443:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16425:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16425:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16416:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16539:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16541:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16541:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16541:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16464:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16471:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16461:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16461:77:10"
															},
															"nodeType": "YulIf",
															"src": "16458:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16570:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16581:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16588:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16577:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16577:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16570:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16392:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16402:3:10",
														"type": ""
													}
												],
												"src": "16363:233:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IGraceToken_$861_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IGraceToken_$861_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IGraceToken_$861_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IGraceToken_$861__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IGraceToken_$861_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero donation not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"POL transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100c0575f3560e01c8063809d458d1161007e578063b030481311610058578063b030481314610226578063e89e4ed614610250578063f2fde38b1461028c578063f8d0bb6f146102b4576100c0565b8063809d458d146101aa5780638da5cb5b146101d2578063a98ad46c146101fc576100c0565b8062b37044146100c457806314a8bd0d146100ee5780634626402b146101185780635610eca014610142578063715018a61461016a5780637e43c77d14610180575b5f80fd5b3480156100cf575f80fd5b506100d86102be565b6040516100e59190610cd4565b60405180910390f35b3480156100f9575f80fd5b506101026102c4565b60405161010f9190610cd4565b60405180910390f35b348015610123575f80fd5b5061012c6102d0565b6040516101399190610d2c565b60405180910390f35b34801561014d575f80fd5b5061016860048036038101906101639190610d73565b6102f5565b005b348015610175575f80fd5b5061017e610562565b005b34801561018b575f80fd5b50610194610575565b6040516101a19190610df9565b60405180910390f35b3480156101b5575f80fd5b506101d060048036038101906101cb9190610e3c565b61059a565b005b3480156101dd575f80fd5b506101e6610653565b6040516101f39190610e87565b60405180910390f35b348015610207575f80fd5b5061021061067a565b60405161021d9190610ec0565b60405180910390f35b348015610231575f80fd5b5061023a61069f565b6040516102479190610cd4565b60405180910390f35b34801561025b575f80fd5b5061027660048036038101906102719190610d73565b6106a5565b6040516102839190610cd4565b60405180910390f35b348015610297575f80fd5b506102b260048036038101906102ad9190610f03565b6106c5565b005b6102bc610749565b005b60045481565b67016345785d8a000081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e90610f88565b60405180910390fd5b6103a63360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661098f909392919063ffffffff16565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610411573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104359190610fdc565b600a6104419190611163565b67016345785d8a00008361045591906111ad565b61045f919061121b565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016104bd92919061124b565b5f604051808303815f87803b1580156104d4575f80fd5b505af11580156104e6573d5f803e3d5ffd5b505050508160045f8282546104fb9190611272565b9250508190555061050a610a11565b3373ffffffffffffffffffffffffffffffffffffffff167f1ce55f2081708dbef7ac42c3785b4627ccd4aa19f21b694b54c92df3d146996a8383600454604051610556939291906112a5565b60405180910390a25050565b61056a610ad2565b6105735f610b59565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105a2610ad2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611324565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600581815481106106b4575f80fd5b905f5260205f20015f915090505481565b6106cd610ad2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361073d575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107349190610e87565b60405180910390fd5b61074681610b59565b50565b5f341161078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061138c565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516107d1906113d7565b5f6040518083038185875af1925050503d805f811461080b576040519150601f19603f3d011682016040523d82523d5f602084013e610810565b606091505b5050905080610854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084b90611435565b60405180910390fd5b5f670de0b6b3a764000067016345785d8a00003461087291906111ad565b61087c919061121b565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016108da92919061124b565b5f604051808303815f87803b1580156108f1575f80fd5b505af1158015610903573d5f803e3d5ffd5b5050505064e8d4a5100034610918919061121b565b60045f8282546109289190611272565b92505081905550610937610a11565b3373ffffffffffffffffffffffffffffffffffffffff167f9c9ad9270af0183a99bf47ee6beebcad2fc6ef1992082283d76ec94947158b513483600454604051610983939291906112a5565b60405180910390a25050565b610a0b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016109c493929190611453565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c1a565b50505050565b5f60065490505b600580549050811015610acf5760058181548110610a3957610a38611488565b5b905f5260205f20015460045410610ab757600181610a579190611272565b6006819055507fe5f196b7c35531c9cdf28ee121967688b244c8557b574489a6182e8f66c929d360058281548110610a9257610a91611488565b5b905f5260205f20015482604051610aaa9291906114b5565b60405180910390a1610abc565b610acf565b8080610ac7906114dc565b915050610a18565b50565b610ada610cb5565b73ffffffffffffffffffffffffffffffffffffffff16610af8610653565b73ffffffffffffffffffffffffffffffffffffffff1614610b5757610b1b610cb5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b4e9190610e87565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8060205f8451602086015f885af180610c39576040513d5f823e3d81fd5b3d92505f519150505f8214610c52576001811415610c6d565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610caf57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610ca69190610e87565b60405180910390fd5b50505050565b5f33905090565b5f819050919050565b610cce81610cbc565b82525050565b5f602082019050610ce75f830184610cc5565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d1682610ced565b9050919050565b610d2681610d0c565b82525050565b5f602082019050610d3f5f830184610d1d565b92915050565b5f80fd5b610d5281610cbc565b8114610d5c575f80fd5b50565b5f81359050610d6d81610d49565b92915050565b5f60208284031215610d8857610d87610d45565b5b5f610d9584828501610d5f565b91505092915050565b5f819050919050565b5f610dc1610dbc610db784610ced565b610d9e565b610ced565b9050919050565b5f610dd282610da7565b9050919050565b5f610de382610dc8565b9050919050565b610df381610dd9565b82525050565b5f602082019050610e0c5f830184610dea565b92915050565b610e1b81610d0c565b8114610e25575f80fd5b50565b5f81359050610e3681610e12565b92915050565b5f60208284031215610e5157610e50610d45565b5b5f610e5e84828501610e28565b91505092915050565b5f610e7182610ced565b9050919050565b610e8181610e67565b82525050565b5f602082019050610e9a5f830184610e78565b92915050565b5f610eaa82610dc8565b9050919050565b610eba81610ea0565b82525050565b5f602082019050610ed35f830184610eb1565b92915050565b610ee281610e67565b8114610eec575f80fd5b50565b5f81359050610efd81610ed9565b92915050565b5f60208284031215610f1857610f17610d45565b5b5f610f2584828501610eef565b91505092915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610f72601d83610f2e565b9150610f7d82610f3e565b602082019050919050565b5f6020820190508181035f830152610f9f81610f66565b9050919050565b5f60ff82169050919050565b610fbb81610fa6565b8114610fc5575f80fd5b50565b5f81519050610fd681610fb2565b92915050565b5f60208284031215610ff157610ff0610d45565b5b5f610ffe84828501610fc8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156110895780860481111561106557611064611007565b5b60018516156110745780820291505b808102905061108285611034565b9450611049565b94509492505050565b5f826110a1576001905061115c565b816110ae575f905061115c565b81600181146110c457600281146110ce576110fd565b600191505061115c565b60ff8411156110e0576110df611007565b5b8360020a9150848211156110f7576110f6611007565b5b5061115c565b5060208310610133831016604e8410600b84101617156111325782820a90508381111561112d5761112c611007565b5b61115c565b61113f8484846001611040565b9250905081840481111561115657611155611007565b5b81810290505b9392505050565b5f61116d82610cbc565b915061117883610fa6565b92506111a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611092565b905092915050565b5f6111b782610cbc565b91506111c283610cbc565b92508282026111d081610cbc565b915082820484148315176111e7576111e6611007565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61122582610cbc565b915061123083610cbc565b9250826112405761123f6111ee565b5b828204905092915050565b5f60408201905061125e5f830185610e78565b61126b6020830184610cc5565b9392505050565b5f61127c82610cbc565b915061128783610cbc565b925082820190508082111561129f5761129e611007565b5b92915050565b5f6060820190506112b85f830186610cc5565b6112c56020830185610cc5565b6112d26040830184610cc5565b949350505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f61130e600f83610f2e565b9150611319826112da565b602082019050919050565b5f6020820190508181035f83015261133b81611302565b9050919050565b7f5a65726f20646f6e6174696f6e206e6f7420616c6c6f776564000000000000005f82015250565b5f611376601983610f2e565b915061138182611342565b602082019050919050565b5f6020820190508181035f8301526113a38161136a565b9050919050565b5f81905092915050565b50565b5f6113c25f836113aa565b91506113cd826113b4565b5f82019050919050565b5f6113e1826113b7565b9150819050919050565b7f504f4c207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f61141f601383610f2e565b915061142a826113eb565b602082019050919050565b5f6020820190508181035f83015261144c81611413565b9050919050565b5f6060820190506114665f830186610e78565b6114736020830185610e78565b6114806040830184610cc5565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6040820190506114c85f830185610cc5565b6114d56020830184610cc5565b9392505050565b5f6114e682610cbc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361151857611517611007565b5b60018201905091905056fea2646970667358221220a80fdc270bf5541eb60ef2d77963f947250945d00ee1cb7396b513ded48be76464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x809D458D GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB0304813 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB0304813 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xE89E4ED6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xF8D0BB6F EQ PUSH2 0x2B4 JUMPI PUSH2 0xC0 JUMP JUMPDEST DUP1 PUSH4 0x809D458D EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x1FC JUMPI PUSH2 0xC0 JUMP JUMPDEST DUP1 PUSH3 0xB37044 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x14A8BD0D EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x5610ECA0 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x7E43C77D EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BC PUSH2 0x749 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32E SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A6 CALLER PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x98F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0xA PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP4 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP3 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x50A PUSH2 0xA11 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CE55F2081708DBEF7AC42C3785B4627CCD4AA19F21B694B54C92DF3D146996A DUP4 DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x556 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x56A PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x573 PUSH0 PUSH2 0xB59 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5A2 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CD PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x746 DUP2 PUSH2 0xB59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x810 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84B SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH8 0x16345785D8A0000 CALLVALUE PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x87C SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP3 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x903 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH5 0xE8D4A51000 CALLVALUE PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x937 PUSH2 0xA11 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C9AD9270AF0183A99BF47EE6BEEBCAD2FC6EF1992082283D76EC94947158B51 CALLVALUE DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x983 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xA0B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x9C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x4 SLOAD LT PUSH2 0xAB7 JUMPI PUSH1 0x1 DUP2 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0xE5F196B7C35531C9CDF28EE121967688B244C8557B574489A6182E8F66C929D3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA92 JUMPI PUSH2 0xA91 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xAAA SWAP3 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST DUP1 DUP1 PUSH2 0xAC7 SWAP1 PUSH2 0x14DC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xADA PUSH2 0xCB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF8 PUSH2 0x653 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH2 0xB1B PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xC52 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xC6D JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xCAF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCE DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE7 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD16 DUP3 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD26 DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH0 DUP4 ADD DUP5 PUSH2 0xD1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP2 EQ PUSH2 0xD5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6D DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD95 DUP5 DUP3 DUP6 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC1 PUSH2 0xDBC PUSH2 0xDB7 DUP5 PUSH2 0xCED JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD2 DUP3 PUSH2 0xDA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE3 DUP3 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0C PUSH0 DUP4 ADD DUP5 PUSH2 0xDEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1B DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP2 EQ PUSH2 0xE25 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE36 DUP2 PUSH2 0xE12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE51 JUMPI PUSH2 0xE50 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE5E DUP5 DUP3 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE71 DUP3 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE81 DUP2 PUSH2 0xE67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9A PUSH0 DUP4 ADD DUP5 PUSH2 0xE78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEAA DUP3 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBA DUP2 PUSH2 0xEA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED3 PUSH0 DUP4 ADD DUP5 PUSH2 0xEB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE2 DUP2 PUSH2 0xE67 JUMP JUMPDEST DUP2 EQ PUSH2 0xEEC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFD DUP2 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF17 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF25 DUP5 DUP3 DUP6 ADD PUSH2 0xEEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF72 PUSH1 0x1D DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0xF7D DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF9F DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBB DUP2 PUSH2 0xFA6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFD6 DUP2 PUSH2 0xFB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFFE DUP5 DUP3 DUP6 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1089 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1074 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1082 DUP6 PUSH2 0x1034 JUMP JUMPDEST SWAP5 POP PUSH2 0x1049 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10A1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x115C JUMP JUMPDEST DUP2 PUSH2 0x10AE JUMPI PUSH0 SWAP1 POP PUSH2 0x115C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x10C4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10CE JUMPI PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x115C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0x1007 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST POP PUSH2 0x115C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1132 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0x1007 JUMP JUMPDEST JUMPDEST PUSH2 0x115C JUMP JUMPDEST PUSH2 0x113F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116D DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1178 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP3 POP PUSH2 0x11A5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11B7 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x11C2 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11D0 DUP2 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11E7 JUMPI PUSH2 0x11E6 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1225 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1230 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1240 JUMPI PUSH2 0x123F PUSH2 0x11EE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x125E PUSH0 DUP4 ADD DUP6 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x126B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x127C DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1287 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x129F JUMPI PUSH2 0x129E PUSH2 0x1007 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12B8 PUSH0 DUP4 ADD DUP7 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x12C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x12D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x130E PUSH1 0xF DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1319 DUP3 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x133B DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20646F6E6174696F6E206E6F7420616C6C6F77656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1376 PUSH1 0x19 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 DUP3 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A3 DUP2 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x13C2 PUSH0 DUP4 PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP PUSH2 0x13CD DUP3 PUSH2 0x13B4 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP3 PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x504F4C207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x141F PUSH1 0x13 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP PUSH2 0x142A DUP3 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x144C DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1466 PUSH0 DUP4 ADD DUP7 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x1473 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x1480 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14C8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x14D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E6 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x1007 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xF 0xDC 0x27 SIGNEXTEND CREATE2 SLOAD 0x1E 0xB6 0xE CALLCODE 0xD7 PUSH26 0x63F947250945D00EE1CB7396B513DED48BE76464736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "406:3596:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;482:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2579:620;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;526:29:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3207:183;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;562:23:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;993:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;797:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1861:710:9;;;:::i;:::-;;676:27;;;;:::o;592:49::-;632:9;592:49;:::o;482:37::-;;;;;;;;;;;;;:::o;2579:620::-;2652:1;2643:6;:10;2635:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2747:62;2774:10;2786:14;;;;;;;;;;;2802:6;2747:9;;;;;;;;;;;:26;;;;:62;;;;;;:::i;:::-;2868:19;2945:9;;;;;;;;;;;2922:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2918:2;:49;;;;:::i;:::-;632:9;2891:6;:22;;;;:::i;:::-;2890:78;;;;:::i;:::-;2868:100;;2979:10;;;;;;;;;;;:15;;;2995:10;3007:11;2979:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3081:6;3065:12;;:22;;;;;;;:::i;:::-;;;;;;;;3098:17;:15;:17::i;:::-;3145:10;3133:58;;;3157:6;3165:11;3178:12;;3133:58;;;;;;;;:::i;:::-;;;;;;;;2624:575;2579:620;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;526:29:9:-;;;;;;;;;;;;;:::o;3207:183::-;1531:13:0;:11;:13::i;:::-;3323:1:9::1;3302:23;;:9;:23;;::::0;3294:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3373:9;3356:14;;:26;;;;;;;;;;;;;;;;;;3207:183:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;562:23:9:-;;;;;;;;;;;;;:::o;993:31::-;;;;:::o;797:189::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1861:710:9:-;1930:1;1918:9;:13;1910:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2011:9;2026:14;;;;;;;;;;;:19;;2053:9;2026:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2010:57;;;2086:4;2078:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;2170:19;2222:7;632:9;2193;:25;;;;:::i;:::-;2192:37;;;;:::i;:::-;2170:59;;2240:10;;;;;;;;;;;:15;;;2256:10;2268:11;2240:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2398:6;2386:9;:18;;;;:::i;:::-;2370:12;;:34;;;;;;;:::i;:::-;;;;;;;;2468:17;:15;:17::i;:::-;2514:10;2503:60;;;2526:9;2537:11;2550:12;;2503:60;;;;;;;;:::i;:::-;;;;;;;;1899:672;;1861:710::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;3398:341:9:-;3450:9;3462:16;;3450:28;;3445:287;3484:10;:17;;;;3480:1;:21;3445:287;;;3543:10;3554:1;3543:13;;;;;;;;:::i;:::-;;;;;;;;;;3527:12;;:29;3523:198;;3600:1;3596;:5;;;;:::i;:::-;3577:16;:24;;;;3625:34;3642:10;3653:1;3642:13;;;;;;;;:::i;:::-;;;;;;;;;;3657:1;3625:34;;;;;;;:::i;:::-;;;;;;;;3523:198;;;3700:5;;3523:198;3503:3;;;;;:::i;:::-;;;;3445:287;;;;3398:341::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1173:117::-;1282:1;1279;1272:12;1419:122;1492:24;1510:5;1492:24;:::i;:::-;1485:5;1482:35;1472:63;;1531:1;1528;1521:12;1472:63;1419:122;:::o;1547:139::-;1593:5;1631:6;1618:20;1609:29;;1647:33;1674:5;1647:33;:::i;:::-;1547:139;;;;:::o;1692:329::-;1751:6;1800:2;1788:9;1779:7;1775:23;1771:32;1768:119;;;1806:79;;:::i;:::-;1768:119;1926:1;1951:53;1996:7;1987:6;1976:9;1972:22;1951:53;:::i;:::-;1941:63;;1897:117;1692:329;;;;:::o;2027:60::-;2055:3;2076:5;2069:12;;2027:60;;;:::o;2093:142::-;2143:9;2176:53;2194:34;2203:24;2221:5;2203:24;:::i;:::-;2194:34;:::i;:::-;2176:53;:::i;:::-;2163:66;;2093:142;;;:::o;2241:126::-;2291:9;2324:37;2355:5;2324:37;:::i;:::-;2311:50;;2241:126;;;:::o;2373:145::-;2442:9;2475:37;2506:5;2475:37;:::i;:::-;2462:50;;2373:145;;;:::o;2524:169::-;2630:56;2680:5;2630:56;:::i;:::-;2625:3;2618:69;2524:169;;:::o;2699:260::-;2811:4;2849:2;2838:9;2834:18;2826:26;;2862:90;2949:1;2938:9;2934:17;2925:6;2862:90;:::i;:::-;2699:260;;;;:::o;2965:138::-;3046:32;3072:5;3046:32;:::i;:::-;3039:5;3036:43;3026:71;;3093:1;3090;3083:12;3026:71;2965:138;:::o;3109:155::-;3163:5;3201:6;3188:20;3179:29;;3217:41;3252:5;3217:41;:::i;:::-;3109:155;;;;:::o;3270:345::-;3337:6;3386:2;3374:9;3365:7;3361:23;3357:32;3354:119;;;3392:79;;:::i;:::-;3354:119;3512:1;3537:61;3590:7;3581:6;3570:9;3566:22;3537:61;:::i;:::-;3527:71;;3483:125;3270:345;;;;:::o;3621:96::-;3658:7;3687:24;3705:5;3687:24;:::i;:::-;3676:35;;3621:96;;;:::o;3723:118::-;3810:24;3828:5;3810:24;:::i;:::-;3805:3;3798:37;3723:118;;:::o;3847:222::-;3940:4;3978:2;3967:9;3963:18;3955:26;;3991:71;4059:1;4048:9;4044:17;4035:6;3991:71;:::i;:::-;3847:222;;;;:::o;4075:140::-;4139:9;4172:37;4203:5;4172:37;:::i;:::-;4159:50;;4075:140;;;:::o;4221:159::-;4322:51;4367:5;4322:51;:::i;:::-;4317:3;4310:64;4221:159;;:::o;4386:250::-;4493:4;4531:2;4520:9;4516:18;4508:26;;4544:85;4626:1;4615:9;4611:17;4602:6;4544:85;:::i;:::-;4386:250;;;;:::o;4642:122::-;4715:24;4733:5;4715:24;:::i;:::-;4708:5;4705:35;4695:63;;4754:1;4751;4744:12;4695:63;4642:122;:::o;4770:139::-;4816:5;4854:6;4841:20;4832:29;;4870:33;4897:5;4870:33;:::i;:::-;4770:139;;;;:::o;4915:329::-;4974:6;5023:2;5011:9;5002:7;4998:23;4994:32;4991:119;;;5029:79;;:::i;:::-;4991:119;5149:1;5174:53;5219:7;5210:6;5199:9;5195:22;5174:53;:::i;:::-;5164:63;;5120:117;4915:329;;;;:::o;5250:169::-;5334:11;5368:6;5363:3;5356:19;5408:4;5403:3;5399:14;5384:29;;5250:169;;;;:::o;5425:179::-;5565:31;5561:1;5553:6;5549:14;5542:55;5425:179;:::o;5610:366::-;5752:3;5773:67;5837:2;5832:3;5773:67;:::i;:::-;5766:74;;5849:93;5938:3;5849:93;:::i;:::-;5967:2;5962:3;5958:12;5951:19;;5610:366;;;:::o;5982:419::-;6148:4;6186:2;6175:9;6171:18;6163:26;;6235:9;6229:4;6225:20;6221:1;6210:9;6206:17;6199:47;6263:131;6389:4;6263:131;:::i;:::-;6255:139;;5982:419;;;:::o;6407:86::-;6442:7;6482:4;6475:5;6471:16;6460:27;;6407:86;;;:::o;6499:118::-;6570:22;6586:5;6570:22;:::i;:::-;6563:5;6560:33;6550:61;;6607:1;6604;6597:12;6550:61;6499:118;:::o;6623:139::-;6678:5;6709:6;6703:13;6694:22;;6725:31;6750:5;6725:31;:::i;:::-;6623:139;;;;:::o;6768:347::-;6836:6;6885:2;6873:9;6864:7;6860:23;6856:32;6853:119;;;6891:79;;:::i;:::-;6853:119;7011:1;7036:62;7090:7;7081:6;7070:9;7066:22;7036:62;:::i;:::-;7026:72;;6982:126;6768:347;;;;:::o;7121:180::-;7169:77;7166:1;7159:88;7266:4;7263:1;7256:15;7290:4;7287:1;7280:15;7307:102;7349:8;7396:5;7393:1;7389:13;7368:34;;7307:102;;;:::o;7415:848::-;7476:5;7483:4;7507:6;7498:15;;7531:5;7522:14;;7545:712;7566:1;7556:8;7553:15;7545:712;;;7661:4;7656:3;7652:14;7646:4;7643:24;7640:50;;;7670:18;;:::i;:::-;7640:50;7720:1;7710:8;7706:16;7703:451;;;8135:4;8128:5;8124:16;8115:25;;7703:451;8185:4;8179;8175:15;8167:23;;8215:32;8238:8;8215:32;:::i;:::-;8203:44;;7545:712;;;7415:848;;;;;;;:::o;8269:1073::-;8323:5;8514:8;8504:40;;8535:1;8526:10;;8537:5;;8504:40;8563:4;8553:36;;8580:1;8571:10;;8582:5;;8553:36;8649:4;8697:1;8692:27;;;;8733:1;8728:191;;;;8642:277;;8692:27;8710:1;8701:10;;8712:5;;;8728:191;8773:3;8763:8;8760:17;8757:43;;;8780:18;;:::i;:::-;8757:43;8829:8;8826:1;8822:16;8813:25;;8864:3;8857:5;8854:14;8851:40;;;8871:18;;:::i;:::-;8851:40;8904:5;;;8642:277;;9028:2;9018:8;9015:16;9009:3;9003:4;9000:13;8996:36;8978:2;8968:8;8965:16;8960:2;8954:4;8951:12;8947:35;8931:111;8928:246;;;9084:8;9078:4;9074:19;9065:28;;9119:3;9112:5;9109:14;9106:40;;;9126:18;;:::i;:::-;9106:40;9159:5;;8928:246;9199:42;9237:3;9227:8;9221:4;9218:1;9199:42;:::i;:::-;9184:57;;;;9273:4;9268:3;9264:14;9257:5;9254:25;9251:51;;;9282:18;;:::i;:::-;9251:51;9331:4;9324:5;9320:16;9311:25;;8269:1073;;;;;;:::o;9348:281::-;9406:5;9430:23;9448:4;9430:23;:::i;:::-;9422:31;;9474:25;9490:8;9474:25;:::i;:::-;9462:37;;9518:104;9555:66;9545:8;9539:4;9518:104;:::i;:::-;9509:113;;9348:281;;;;:::o;9635:410::-;9675:7;9698:20;9716:1;9698:20;:::i;:::-;9693:25;;9732:20;9750:1;9732:20;:::i;:::-;9727:25;;9787:1;9784;9780:9;9809:30;9827:11;9809:30;:::i;:::-;9798:41;;9988:1;9979:7;9975:15;9972:1;9969:22;9949:1;9942:9;9922:83;9899:139;;10018:18;;:::i;:::-;9899:139;9683:362;9635:410;;;;:::o;10051:180::-;10099:77;10096:1;10089:88;10196:4;10193:1;10186:15;10220:4;10217:1;10210:15;10237:185;10277:1;10294:20;10312:1;10294:20;:::i;:::-;10289:25;;10328:20;10346:1;10328:20;:::i;:::-;10323:25;;10367:1;10357:35;;10372:18;;:::i;:::-;10357:35;10414:1;10411;10407:9;10402:14;;10237:185;;;;:::o;10428:332::-;10549:4;10587:2;10576:9;10572:18;10564:26;;10600:71;10668:1;10657:9;10653:17;10644:6;10600:71;:::i;:::-;10681:72;10749:2;10738:9;10734:18;10725:6;10681:72;:::i;:::-;10428:332;;;;;:::o;10766:191::-;10806:3;10825:20;10843:1;10825:20;:::i;:::-;10820:25;;10859:20;10877:1;10859:20;:::i;:::-;10854:25;;10902:1;10899;10895:9;10888:16;;10923:3;10920:1;10917:10;10914:36;;;10930:18;;:::i;:::-;10914:36;10766:191;;;;:::o;10963:442::-;11112:4;11150:2;11139:9;11135:18;11127:26;;11163:71;11231:1;11220:9;11216:17;11207:6;11163:71;:::i;:::-;11244:72;11312:2;11301:9;11297:18;11288:6;11244:72;:::i;:::-;11326;11394:2;11383:9;11379:18;11370:6;11326:72;:::i;:::-;10963:442;;;;;;:::o;11411:165::-;11551:17;11547:1;11539:6;11535:14;11528:41;11411:165;:::o;11582:366::-;11724:3;11745:67;11809:2;11804:3;11745:67;:::i;:::-;11738:74;;11821:93;11910:3;11821:93;:::i;:::-;11939:2;11934:3;11930:12;11923:19;;11582:366;;;:::o;11954:419::-;12120:4;12158:2;12147:9;12143:18;12135:26;;12207:9;12201:4;12197:20;12193:1;12182:9;12178:17;12171:47;12235:131;12361:4;12235:131;:::i;:::-;12227:139;;11954:419;;;:::o;12379:175::-;12519:27;12515:1;12507:6;12503:14;12496:51;12379:175;:::o;12560:366::-;12702:3;12723:67;12787:2;12782:3;12723:67;:::i;:::-;12716:74;;12799:93;12888:3;12799:93;:::i;:::-;12917:2;12912:3;12908:12;12901:19;;12560:366;;;:::o;12932:419::-;13098:4;13136:2;13125:9;13121:18;13113:26;;13185:9;13179:4;13175:20;13171:1;13160:9;13156:17;13149:47;13213:131;13339:4;13213:131;:::i;:::-;13205:139;;12932:419;;;:::o;13357:147::-;13458:11;13495:3;13480:18;;13357:147;;;;:::o;13510:114::-;;:::o;13630:398::-;13789:3;13810:83;13891:1;13886:3;13810:83;:::i;:::-;13803:90;;13902:93;13991:3;13902:93;:::i;:::-;14020:1;14015:3;14011:11;14004:18;;13630:398;;;:::o;14034:379::-;14218:3;14240:147;14383:3;14240:147;:::i;:::-;14233:154;;14404:3;14397:10;;14034:379;;;:::o;14419:169::-;14559:21;14555:1;14547:6;14543:14;14536:45;14419:169;:::o;14594:366::-;14736:3;14757:67;14821:2;14816:3;14757:67;:::i;:::-;14750:74;;14833:93;14922:3;14833:93;:::i;:::-;14951:2;14946:3;14942:12;14935:19;;14594:366;;;:::o;14966:419::-;15132:4;15170:2;15159:9;15155:18;15147:26;;15219:9;15213:4;15209:20;15205:1;15194:9;15190:17;15183:47;15247:131;15373:4;15247:131;:::i;:::-;15239:139;;14966:419;;;:::o;15391:442::-;15540:4;15578:2;15567:9;15563:18;15555:26;;15591:71;15659:1;15648:9;15644:17;15635:6;15591:71;:::i;:::-;15672:72;15740:2;15729:9;15725:18;15716:6;15672:72;:::i;:::-;15754;15822:2;15811:9;15807:18;15798:6;15754:72;:::i;:::-;15391:442;;;;;;:::o;15839:180::-;15887:77;15884:1;15877:88;15984:4;15981:1;15974:15;16008:4;16005:1;15998:15;16025:332;16146:4;16184:2;16173:9;16169:18;16161:26;;16197:71;16265:1;16254:9;16250:17;16241:6;16197:71;:::i;:::-;16278:72;16346:2;16335:9;16331:18;16322:6;16278:72;:::i;:::-;16025:332;;;;;:::o;16363:233::-;16402:3;16425:24;16443:5;16425:24;:::i;:::-;16416:33;;16471:66;16464:5;16461:77;16458:103;;16541:18;;:::i;:::-;16458:103;16588:1;16581:5;16577:13;16570:20;;16363:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1093000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EXCHANGE_RATE()": "348",
								"currentMilestone()": "2447",
								"donatePOL()": "infinite",
								"donateUSDT(uint256)": "infinite",
								"graceToken()": "infinite",
								"milestones(uint256)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"totalDonated()": "2426",
								"transferOwnership(address)": "infinite",
								"treasuryWallet()": "2553",
								"updateTreasuryWallet(address)": "infinite",
								"usdtToken()": "infinite"
							},
							"internal": {
								"_checkMilestone()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 838,
									"end": 850,
									"name": "PUSH",
									"source": 9,
									"value": "3B9ACA00"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 882,
									"end": 894,
									"name": "PUSH",
									"source": 9,
									"value": "12A05F200"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 917,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "2540BE400"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 953,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "BA43B7400"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 797,
									"end": 986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 797,
									"end": 986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 797,
									"end": 986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1316,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1475,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1536,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1508,
									"end": 1537,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1508,
									"end": 1537,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1523,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1508,
									"end": 1537,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1500,
									"end": 1565,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1500,
									"end": 1565,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1584,
									"end": 1609,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1584,
									"end": 1609,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1584,
									"end": 1595,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1584,
									"end": 1609,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1584,
									"end": 1609,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1584,
									"end": 1609,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1576,
									"end": 1635,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1576,
									"end": 1635,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1676,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1654,
									"end": 1678,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1654,
									"end": 1678,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1654,
									"end": 1664,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1654,
									"end": 1678,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1654,
									"end": 1678,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1654,
									"end": 1678,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1646,
									"end": 1703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1646,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1741,
									"end": 1756,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1738,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1724,
									"end": 1738,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1756,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1792,
									"end": 1803,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1767,
									"end": 1777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1804,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1844,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1824,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1815,
									"end": 1824,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1845,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1316,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 406,
									"end": 4002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 511,
									"end": 518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 540,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 540,
									"end": 564,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 529,
									"end": 564,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 529,
									"end": 564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 576,
									"end": 714,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 657,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 689,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 647,
									"end": 690,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 637,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 694,
									"end": 706,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 637,
									"end": 708,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 576,
									"end": 714,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 576,
									"end": 714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 823,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 801,
									"end": 823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 832,
									"end": 873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 832,
									"end": 873,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 922,
									"end": 929,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 969,
									"end": 974,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 951,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 951,
									"end": 975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 951,
									"end": 975,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 951,
									"end": 975,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 940,
									"end": 975,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 940,
									"end": 975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1109,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 987,
									"end": 1109,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1058,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1050,
									"end": 1085,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1099,
									"end": 1100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 1097,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1101,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1109,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 1209,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1197,
									"end": 1210,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1210,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1246,
									"end": 1251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1219,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "tag",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1377,
									"end": 1383,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1385,
									"end": 1391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1393,
									"end": 1399,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1445,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1421,
									"end": 1428,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1440,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1446,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1530,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1530,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1410,
									"end": 1530,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1449,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1449,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1449,
									"end": 1528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1449,
									"end": 1528,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1449,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1530,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1410,
									"end": 1530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1569,
									"end": 1570,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1594,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1658,
									"end": 1665,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1649,
									"end": 1655,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1647,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1634,
									"end": 1656,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1594,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1594,
									"end": 1666,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1594,
									"end": 1666,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1594,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1797,
									"end": 1804,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 1794,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1786,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1741,
									"end": 1805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1686,
									"end": 1815,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1880,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1936,
									"end": 1943,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1916,
									"end": 1925,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1912,
									"end": 1934,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1880,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1880,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1880,
									"end": 1944,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1880,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 1944,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 1944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1825,
									"end": 1954,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1993,
									"end": 1995,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2019,
									"end": 2083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2066,
									"end": 2072,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2064,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2073,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2019,
									"end": 2083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 2019,
									"end": 2083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2019,
									"end": 2083,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2019,
									"end": 2083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2009,
									"end": 2083,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2009,
									"end": 2083,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2093,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 2100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2224,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2106,
									"end": 2224,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2193,
									"end": 2217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2181,
									"end": 2218,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2224,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2224,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2452,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2230,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2323,
									"end": 2327,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2361,
									"end": 2363,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2350,
									"end": 2359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2346,
									"end": 2364,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2338,
									"end": 2364,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2338,
									"end": 2364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2442,
									"end": 2443,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2440,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2424,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2374,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2445,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2374,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2452,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2452,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2627,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2458,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2542,
									"end": 2553,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2576,
									"end": 2582,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2571,
									"end": 2574,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2583,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2616,
									"end": 2620,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2611,
									"end": 2614,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2592,
									"end": 2621,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2592,
									"end": 2621,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2627,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2627,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2806,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2633,
									"end": 2806,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2773,
									"end": 2798,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C69642074726561737572792077616C6C6574000000000000000000"
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2767,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2771,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2750,
									"end": 2799,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 3178,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2812,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2954,
									"end": 2957,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3039,
									"end": 3041,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3034,
									"end": 3037,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2975,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2975,
									"end": 3042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2975,
									"end": 3042,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2975,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2968,
									"end": 3042,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2968,
									"end": 3042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3051,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3140,
									"end": 3143,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3051,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 3051,
									"end": 3144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3051,
									"end": 3144,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3051,
									"end": 3144,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3171,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3164,
									"end": 3167,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3160,
									"end": 3172,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3153,
									"end": 3172,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3153,
									"end": 3172,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 3178,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 3178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 3178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 3178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3184,
									"end": 3603,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3184,
									"end": 3603,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3350,
									"end": 3354,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3388,
									"end": 3390,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3377,
									"end": 3386,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3391,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3365,
									"end": 3391,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3365,
									"end": 3391,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3437,
									"end": 3446,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3431,
									"end": 3435,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3427,
									"end": 3447,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3423,
									"end": 3424,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3412,
									"end": 3421,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3408,
									"end": 3425,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3596,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3591,
									"end": 3595,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3596,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 3465,
									"end": 3596,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3596,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3465,
									"end": 3596,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3596,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3596,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3184,
									"end": 3603,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3184,
									"end": 3603,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3184,
									"end": 3603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3184,
									"end": 3603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3780,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 3609,
									"end": 3780,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3749,
									"end": 3772,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 3745,
									"end": 3746,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3737,
									"end": 3743,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3733,
									"end": 3747,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3726,
									"end": 3773,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3780,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 4152,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 3786,
									"end": 4152,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3928,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3949,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4013,
									"end": 4015,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 4008,
									"end": 4011,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3949,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3949,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3949,
									"end": 4016,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3949,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3942,
									"end": 4016,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3942,
									"end": 4016,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4114,
									"end": 4117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 4025,
									"end": 4118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4118,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4025,
									"end": 4118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4145,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4138,
									"end": 4141,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4134,
									"end": 4146,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4127,
									"end": 4146,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4127,
									"end": 4146,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 4152,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 4152,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 4152,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 4152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4577,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4158,
									"end": 4577,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4324,
									"end": 4328,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4362,
									"end": 4364,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4351,
									"end": 4360,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4347,
									"end": 4365,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4339,
									"end": 4365,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4339,
									"end": 4365,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4411,
									"end": 4420,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4409,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4421,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4397,
									"end": 4398,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4395,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4382,
									"end": 4399,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4375,
									"end": 4422,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4439,
									"end": 4570,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4565,
									"end": 4569,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4439,
									"end": 4570,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4439,
									"end": 4570,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4439,
									"end": 4570,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4439,
									"end": 4570,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4570,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4577,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4577,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4577,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4577,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4583,
									"end": 4753,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4583,
									"end": 4753,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4723,
									"end": 4745,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420555344542061646472657373000000000000000000000000"
								},
								{
									"begin": 4719,
									"end": 4720,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4711,
									"end": 4717,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4707,
									"end": 4721,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4746,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4583,
									"end": 4753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4583,
									"end": 4753,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4759,
									"end": 5125,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4759,
									"end": 5125,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4901,
									"end": 4904,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4922,
									"end": 4989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4986,
									"end": 4988,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4981,
									"end": 4984,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4922,
									"end": 4989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4922,
									"end": 4989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4922,
									"end": 4989,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4922,
									"end": 4989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4915,
									"end": 4989,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4915,
									"end": 4989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4998,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 5087,
									"end": 5090,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4998,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4998,
									"end": 5091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4998,
									"end": 5091,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4998,
									"end": 5091,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5118,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5111,
									"end": 5114,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5107,
									"end": 5119,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5100,
									"end": 5119,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5100,
									"end": 5119,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4759,
									"end": 5125,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4759,
									"end": 5125,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4759,
									"end": 5125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4759,
									"end": 5125,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5550,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 5131,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5297,
									"end": 5301,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5335,
									"end": 5337,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5324,
									"end": 5333,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5338,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5312,
									"end": 5338,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5312,
									"end": 5338,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5384,
									"end": 5393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5374,
									"end": 5394,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5370,
									"end": 5371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5359,
									"end": 5368,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5355,
									"end": 5372,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5348,
									"end": 5395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5538,
									"end": 5542,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 5412,
									"end": 5543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5543,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5412,
									"end": 5543,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5404,
									"end": 5543,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5404,
									"end": 5543,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5550,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5550,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5550,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 4002,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a80fdc270bf5541eb60ef2d77963f947250945d00ee1cb7396b513ded48be76464736f6c63430008140033",
									".code": [
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "809D458D"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "B0304813"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "B0304813"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "E89E4ED6"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "F8D0BB6F"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "809D458D"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "A98AD46C"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "B37044"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "14A8BD0D"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "4626402B"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "5610ECA0"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "7E43C77D"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 4002,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 676,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 592,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 482,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 482,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2579,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2579,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 555,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 526,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 526,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3207,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3207,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 562,
											"end": 585,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 562,
											"end": 585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 562,
											"end": 585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 993,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 993,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 797,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 797,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 797,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1861,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 676,
											"end": 703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 632,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "16345785D8A0000"
										},
										{
											"begin": 592,
											"end": 641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 592,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 482,
											"end": 519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2635,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2747,
											"end": 2773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2747,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2965,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2965,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2965,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2922,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2922,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2918,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2918,
											"end": 2967,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2918,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2967,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2918,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 632,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "16345785D8A0000"
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2891,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2890,
											"end": 2968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2890,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2968,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2890,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2994,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2979,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3065,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3098,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3155,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "1CE55F2081708DBEF7AC42C3785B4627CCD4AA19F21B694B54C92DF3D146996A"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3176,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3190,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3178,
											"end": 3190,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3133,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 555,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 526,
											"end": 555,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 526,
											"end": 555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3302,
											"end": 3325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3302,
											"end": 3325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3325,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3294,
											"end": 3345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3294,
											"end": 3345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3382,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3356,
											"end": 3370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 585,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 993,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1861,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1931,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1910,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1910,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2045,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2045,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2026,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2090,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2078,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2078,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 632,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "16345785D8A0000"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2193,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2192,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 2256,
											"end": 2266,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2279,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2240,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "E8D4A51000"
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2386,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2370,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2468,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2524,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "PUSH",
											"source": 9,
											"value": "9C9AD9270AF0183A99BF47EE6BEEBCAD2FC6EF1992082283D76EC94947158B51"
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2503,
											"end": 2563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 2571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3739,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3398,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3478,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3462,
											"end": 3478,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3494,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3480,
											"end": 3481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3480,
											"end": 3501,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3543,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3527,
											"end": 3539,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3556,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3601,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3596,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3593,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH",
											"source": 9,
											"value": "E5F196B7C35531C9CDF28EE121967688B244C8557B574489A6182E8F66C929D3"
										},
										{
											"begin": 3642,
											"end": 3652,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3653,
											"end": 3654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3642,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3625,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3700,
											"end": 3705,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3523,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3503,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 574,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 684,
											"end": 826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 787,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 775,
											"end": 820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 941,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 956,
											"end": 982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 992,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1284,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1541,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1419,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1510,
											"end": 1515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1492,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1517,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1472,
											"end": 1535,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1533,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1535,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1472,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1686,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1547,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1647,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1680,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1647,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1686,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 2021,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1692,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1887,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1768,
											"end": 1887,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1806,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1806,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1885,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1806,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1887,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1768,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 1994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1951,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 2004,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1951,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 2004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 2004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 2014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 2021,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 2021,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 2021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 2021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 2021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2087,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2027,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2087,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2235,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2093,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2194,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2203,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2194,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2228,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2194,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2176,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2229,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2176,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2367,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2241,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2324,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2373,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2475,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2512,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2475,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2693,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2524,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2630,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2959,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2699,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2851,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2862,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2952,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2862,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2959,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3103,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2965,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3072,
											"end": 3077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3046,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3078,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3046,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3079,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3026,
											"end": 3097,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3083,
											"end": 3095,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3097,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3026,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3264,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3109,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3208,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3179,
											"end": 3208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3179,
											"end": 3208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3252,
											"end": 3257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3217,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3258,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3217,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3264,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3615,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3270,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3388,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3372,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3384,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 3392,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3590,
											"end": 3597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3537,
											"end": 3598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3598,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3537,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3483,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3615,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3621,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3687,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3841,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3723,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3828,
											"end": 3833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3810,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3834,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3810,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 4069,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3847,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3963,
											"end": 3981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 3981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 3981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3991,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4062,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3991,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 4069,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 4069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 4069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 4069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 4069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4215,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4075,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4172,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4380,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4221,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4367,
											"end": 4372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4322,
											"end": 4373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4608,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4544,
											"end": 4629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4642,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4733,
											"end": 4738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4715,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4715,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4695,
											"end": 4758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4758,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4695,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4909,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4770,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4861,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4870,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4870,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4870,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4870,
											"end": 4903,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4870,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4909,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5244,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4915,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5009,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 5021,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5026,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5029,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5219,
											"end": 5226,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5216,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 5174,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5244,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5419,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5250,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5356,
											"end": 5375,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5403,
											"end": 5406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5419,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5604,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 5425,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5596,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5976,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 5610,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 5832,
											"end": 5835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5773,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5773,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5938,
											"end": 5941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 5849,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5942,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5849,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5967,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 5970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6401,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5982,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6229,
											"end": 6233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6245,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6263,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6389,
											"end": 6393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6263,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6263,
											"end": 6394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6263,
											"end": 6394,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6263,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6493,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6407,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6442,
											"end": 6449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6486,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6475,
											"end": 6480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6487,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6586,
											"end": 6591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6570,
											"end": 6592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6592,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6570,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6593,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6550,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6550,
											"end": 6611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6609,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6550,
											"end": 6611,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6550,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6762,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 6623,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6716,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6750,
											"end": 6755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 6725,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6725,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7115,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6768,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6883,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6888,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6891,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7079,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 7036,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7098,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7036,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7115,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7301,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 7121,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7246,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7256,
											"end": 7271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7294,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7295,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7409,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 7307,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7396,
											"end": 7401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7389,
											"end": 7402,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7556,
											"end": 7564,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7568,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7661,
											"end": 7665,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7659,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7666,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7667,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7690,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7640,
											"end": 7690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 7670,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7690,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7640,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7710,
											"end": 7718,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7703,
											"end": 8154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7703,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7703,
											"end": 8154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8128,
											"end": 8133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8115,
											"end": 8140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8115,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7703,
											"end": 8154,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7703,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8190,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8238,
											"end": 8246,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 8215,
											"end": 8247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8247,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8215,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 8247,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 8247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7545,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 8263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8323,
											"end": 8328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8535,
											"end": 8536,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8526,
											"end": 8536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8526,
											"end": 8536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8537,
											"end": 8542,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8563,
											"end": 8567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 8553,
											"end": 8589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8571,
											"end": 8581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8582,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8582,
											"end": 8587,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8589,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 8553,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8649,
											"end": 8653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8697,
											"end": 8698,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8692,
											"end": 8719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 8692,
											"end": 8719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8734,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8728,
											"end": 8919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8919,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8728,
											"end": 8919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 8642,
											"end": 8919,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8719,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 8692,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8701,
											"end": 8711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8712,
											"end": 8717,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8919,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8728,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8776,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8763,
											"end": 8771,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8777,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8757,
											"end": 8800,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8757,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 8757,
											"end": 8800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 8780,
											"end": 8798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8757,
											"end": 8800,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 8757,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8829,
											"end": 8837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 8827,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8822,
											"end": 8838,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8867,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8868,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8891,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 8851,
											"end": 8891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 8871,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8891,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 8851,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8904,
											"end": 8909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8904,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8904,
											"end": 8909,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8919,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 8642,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9031,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9009,
											"end": 9012,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 9003,
											"end": 9007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9000,
											"end": 9013,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8996,
											"end": 9032,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8978,
											"end": 8980,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 8968,
											"end": 8976,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8965,
											"end": 8981,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8960,
											"end": 8962,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8951,
											"end": 8963,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8947,
											"end": 8982,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 9174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 8928,
											"end": 9174,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9093,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9122,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9109,
											"end": 9123,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 9106,
											"end": 9146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9126,
											"end": 9144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9146,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 9106,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9159,
											"end": 9164,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 9174,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 8928,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 9237,
											"end": 9240,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9227,
											"end": 9235,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9225,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9199,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9199,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9241,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 9199,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9241,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9273,
											"end": 9277,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9268,
											"end": 9271,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9278,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9254,
											"end": 9279,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9251,
											"end": 9302,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9251,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 9251,
											"end": 9302,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9282,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9251,
											"end": 9302,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 9251,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9336,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 9342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9629,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 9348,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9430,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9430,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9430,
											"end": 9453,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 9430,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 9490,
											"end": 9498,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 9474,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9499,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 9555,
											"end": 9621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9545,
											"end": 9553,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9539,
											"end": 9543,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9518,
											"end": 9622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9629,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 10045,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 9635,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9675,
											"end": 9682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9698,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 9750,
											"end": 9751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9732,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9809,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 9827,
											"end": 9838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9809,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9809,
											"end": 9839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9809,
											"end": 9839,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 9809,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 9989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 9986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9969,
											"end": 9991,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9950,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9951,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9922,
											"end": 10005,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 9899,
											"end": 10038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10018,
											"end": 10036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 10038,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 9899,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9683,
											"end": 10045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 10045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 10045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 10045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 10045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 10045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10231,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 10051,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10099,
											"end": 10176,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10096,
											"end": 10097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10193,
											"end": 10194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10186,
											"end": 10201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10224,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10217,
											"end": 10218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10225,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10422,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 10237,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10294,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 10312,
											"end": 10313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 10294,
											"end": 10314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10314,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 10294,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 10328,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10348,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10357,
											"end": 10392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 10372,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10392,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10357,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10407,
											"end": 10416,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10422,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10589,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10564,
											"end": 10590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10564,
											"end": 10590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10657,
											"end": 10666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10653,
											"end": 10670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10644,
											"end": 10650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 10600,
											"end": 10671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10671,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10600,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10681,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10749,
											"end": 10751,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10738,
											"end": 10747,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10734,
											"end": 10752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10731,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10681,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 10681,
											"end": 10753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10681,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10681,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10957,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 10766,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10825,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10843,
											"end": 10844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 10825,
											"end": 10845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 10845,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10825,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10820,
											"end": 10845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10820,
											"end": 10845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 10859,
											"end": 10879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10879,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10859,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10879,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 10879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10902,
											"end": 10903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10927,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10930,
											"end": 10948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 10930,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10957,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11112,
											"end": 11116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11152,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11139,
											"end": 11148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11135,
											"end": 11153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11163,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11216,
											"end": 11233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11207,
											"end": 11213,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11163,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 11163,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11163,
											"end": 11234,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 11163,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11301,
											"end": 11310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11288,
											"end": 11294,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 11244,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 11394,
											"end": 11396,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11383,
											"end": 11392,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11370,
											"end": 11376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 11326,
											"end": 11398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11398,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 11326,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 11405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11576,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11411,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11551,
											"end": 11568,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11535,
											"end": 11549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11528,
											"end": 11569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11809,
											"end": 11811,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 11804,
											"end": 11807,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 11745,
											"end": 11812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11910,
											"end": 11913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11821,
											"end": 11914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11939,
											"end": 11941,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11934,
											"end": 11937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11923,
											"end": 11942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11923,
											"end": 11942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12158,
											"end": 12160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12147,
											"end": 12156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12217,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12361,
											"end": 12365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12235,
											"end": 12366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12227,
											"end": 12366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12227,
											"end": 12366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12554,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 12379,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12519,
											"end": 12546,
											"name": "PUSH",
											"source": 10,
											"value": "5A65726F20646F6E6174696F6E206E6F7420616C6C6F77656400000000000000"
										},
										{
											"begin": 12515,
											"end": 12516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12507,
											"end": 12513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12503,
											"end": 12517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12496,
											"end": 12547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12560,
											"end": 12926,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 12560,
											"end": 12926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12702,
											"end": 12705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12723,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12787,
											"end": 12789,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 12782,
											"end": 12785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12723,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 12723,
											"end": 12790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12723,
											"end": 12790,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12723,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12716,
											"end": 12790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12716,
											"end": 12790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12888,
											"end": 12891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 12799,
											"end": 12892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12892,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12799,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12912,
											"end": 12915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12908,
											"end": 12920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12560,
											"end": 12926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12560,
											"end": 12926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12560,
											"end": 12926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12560,
											"end": 12926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 13351,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 12932,
											"end": 13351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13098,
											"end": 13102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13136,
											"end": 13138,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13125,
											"end": 13134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13113,
											"end": 13139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13113,
											"end": 13139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13175,
											"end": 13195,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13156,
											"end": 13173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13149,
											"end": 13196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 13339,
											"end": 13343,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13213,
											"end": 13344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13344,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 13213,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 13351,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 13351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 13351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 13351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13504,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13357,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13504,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13510,
											"end": 13624,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13510,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13510,
											"end": 13624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13510,
											"end": 13624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14028,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 13630,
											"end": 14028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13810,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13810,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13810,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13810,
											"end": 13893,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 13810,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13803,
											"end": 13893,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13803,
											"end": 13893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13991,
											"end": 13994,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13902,
											"end": 13995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14020,
											"end": 14021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14015,
											"end": 14018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14011,
											"end": 14022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14413,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 14034,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14218,
											"end": 14221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14240,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 14383,
											"end": 14386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14240,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14240,
											"end": 14387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14240,
											"end": 14387,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 14240,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14233,
											"end": 14387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14233,
											"end": 14387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14404,
											"end": 14407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14588,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14419,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14580,
											"name": "PUSH",
											"source": 10,
											"value": "504F4C207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 14555,
											"end": 14556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14547,
											"end": 14553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14960,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 14594,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14736,
											"end": 14739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 14821,
											"end": 14823,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 14816,
											"end": 14819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14757,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 14757,
											"end": 14824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14757,
											"end": 14824,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 14757,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14922,
											"end": 14925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14833,
											"end": 14926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14926,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14833,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14946,
											"end": 14949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14942,
											"end": 14954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14935,
											"end": 14954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14935,
											"end": 14954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15385,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 14966,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15132,
											"end": 15136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15170,
											"end": 15172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15219,
											"end": 15228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15213,
											"end": 15217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15209,
											"end": 15229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15194,
											"end": 15203,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15190,
											"end": 15207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15183,
											"end": 15230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15247,
											"end": 15378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 15373,
											"end": 15377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15247,
											"end": 15378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 15247,
											"end": 15378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15247,
											"end": 15378,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 15247,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15540,
											"end": 15544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15580,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15567,
											"end": 15576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15555,
											"end": 15581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15555,
											"end": 15581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15591,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 15659,
											"end": 15660,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15648,
											"end": 15657,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15635,
											"end": 15641,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15591,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 15591,
											"end": 15662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15591,
											"end": 15662,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 15591,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 15740,
											"end": 15742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15729,
											"end": 15738,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15716,
											"end": 15722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 15672,
											"end": 15744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15744,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 15672,
											"end": 15744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15754,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 15822,
											"end": 15824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15811,
											"end": 15820,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15807,
											"end": 15825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15798,
											"end": 15804,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15754,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 15754,
											"end": 15826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15754,
											"end": 15826,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 15754,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 16019,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 15839,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15964,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15884,
											"end": 15885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15877,
											"end": 15965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15984,
											"end": 15988,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15981,
											"end": 15982,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15974,
											"end": 15989,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16008,
											"end": 16012,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16005,
											"end": 16006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16013,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16146,
											"end": 16150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16184,
											"end": 16186,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16173,
											"end": 16182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16197,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16265,
											"end": 16266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16254,
											"end": 16263,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16250,
											"end": 16267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16241,
											"end": 16247,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16197,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 16197,
											"end": 16268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16197,
											"end": 16268,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16197,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16278,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 16346,
											"end": 16348,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16335,
											"end": 16344,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16331,
											"end": 16349,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16322,
											"end": 16328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16278,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 16278,
											"end": 16350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16278,
											"end": 16350,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 16278,
											"end": 16350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16596,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 16363,
											"end": 16596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16402,
											"end": 16405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16425,
											"end": 16449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 16443,
											"end": 16448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16425,
											"end": 16449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 16425,
											"end": 16449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16425,
											"end": 16449,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 16425,
											"end": 16449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16416,
											"end": 16449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16416,
											"end": 16449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16471,
											"end": 16537,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16464,
											"end": 16469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16461,
											"end": 16538,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16458,
											"end": 16561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 16458,
											"end": 16561,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 16541,
											"end": 16559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16458,
											"end": 16561,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 16458,
											"end": 16561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16589,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16581,
											"end": 16586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16577,
											"end": 16590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16570,
											"end": 16590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16570,
											"end": 16590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"donation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EXCHANGE_RATE()": "14a8bd0d",
							"currentMilestone()": "b0304813",
							"donatePOL()": "f8d0bb6f",
							"donateUSDT(uint256)": "5610eca0",
							"graceToken()": "7e43c77d",
							"milestones(uint256)": "e89e4ed6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"totalDonated()": "00b37044",
							"transferOwnership(address)": "f2fde38b",
							"treasuryWallet()": "4626402b",
							"updateTreasuryWallet(address)": "809d458d",
							"usdtToken()": "a98ad46c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasuryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_graceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"graceMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"DonatedPOL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"graceMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"DonatedUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"milestoneAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"milestoneIndex\",\"type\":\"uint256\"}],\"name\":\"MilestoneReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EXCHANGE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMilestone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donatePOL\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"graceToken\",\"outputs\":[{\"internalType\":\"contract IGraceToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"milestones\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"donation.sol\":\"GraceDonation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"donation.sol\":{\"keccak256\":\"0x00d215e820070c10b94d08183810098a1a602379eabfbb88d818cae6500bce14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c208340d915245f761d84e3db92802f5d2603aaac71ba6e03c076c58004ebef2\",\"dweb:/ipfs/QmceuXHhTDLuwHUDEmkErAzTSirj7zs7SiGzAmaZ8V7amK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "donation.sol:GraceDonation",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 869,
								"contract": "donation.sol:GraceDonation",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 872,
								"contract": "donation.sol:GraceDonation",
								"label": "graceToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IGraceToken)861"
							},
							{
								"astId": 875,
								"contract": "donation.sol:GraceDonation",
								"label": "usdtToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 880,
								"contract": "donation.sol:GraceDonation",
								"label": "totalDonated",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 904,
								"contract": "donation.sol:GraceDonation",
								"label": "milestones",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 906,
								"contract": "donation.sol:GraceDonation",
								"label": "currentMilestone",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IGraceToken)861": {
								"encoding": "inplace",
								"label": "contract IGraceToken",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IGraceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"donation.sol\":\"IGraceToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"donation.sol\":{\"keccak256\":\"0x00d215e820070c10b94d08183810098a1a602379eabfbb88d818cae6500bce14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c208340d915245f761d84e3db92802f5d2603aaac71ba6e03c076c58004ebef2\",\"dweb:/ipfs/QmceuXHhTDLuwHUDEmkErAzTSirj7zs7SiGzAmaZ8V7amK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							835
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 836,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 835,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 835,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								835
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							847
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 847,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 847,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								847,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							847
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 848,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 847,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 315,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 315,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 315,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 315,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 315,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 315,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						],
						"IERC20Metadata": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 316,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 321,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "306:6:5"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 341,
							"linearizedBaseContracts": [
								341,
								315
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 341,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 341,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 337,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 341,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 342,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							805
						]
					},
					"id": 806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 316,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 344,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 346,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 805,
							"linearizedBaseContracts": [
								805
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 353,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 362,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 381,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 805,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 403,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 405,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 392,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 401,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 388,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 805,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 430,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 432,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 433,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 428,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 426,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 425,
												"id": 437,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 805,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 458,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 460,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 461,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 456,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 454,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 453,
												"id": 466,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 805,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 485,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$805",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$805",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 481,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 492,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 493,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 494,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 805,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 540,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															511
														],
														"declarations": [
															{
																"constant": false,
																"id": 511,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 540,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 510,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 520,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 516,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$805",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$805",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 512,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 522,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 531,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 530,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 525,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 526,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 527,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 507,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 524,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 362,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 529,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 533,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 534,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 536,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 532,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 539,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 501,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 805,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 553,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 557,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 559,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 561,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 555,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 565,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 566,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 564,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 570,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 573,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 575,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 576,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 577,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 571,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 569,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 583,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 581,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 805,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 602,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 616,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 617,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 618,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 614,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 629,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 628,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 624,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 593,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 622,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 621,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 627,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 608,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 609,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 610,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 607,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 805,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 647,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 662,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 663,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 665,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 660,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 676,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 675,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 671,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 669,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 668,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 674,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 653,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 654,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 656,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 652,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 805,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 692,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 706,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 708,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 704,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 719,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 718,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 714,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 683,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 712,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 711,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 717,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 703,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 698,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 699,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 700,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 697,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 805,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 728,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 728,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 735,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 726,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 737,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 738,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 749,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 756,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 754,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 753,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 759,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 724,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 805,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 769,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 769,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 778,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 781,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 783,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 785,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 796,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 790,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 767,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 789,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 788,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 800,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 773,
												"id": 802,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 766,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 765,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 805,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 806,
							"src": "698:9376:6",
							"usedErrors": [
								353,
								362
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							835
						]
					},
					"id": 836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 835,
							"linearizedBaseContracts": [
								835
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 813,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 812,
												"id": 815,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 835,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 822,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 821,
												"id": 824,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 835,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 830,
												"id": 832,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 835,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 836,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							847
						]
					},
					"id": 848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 837,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 847,
							"linearizedBaseContracts": [
								847
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 840,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 847,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 848,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"donation.sol": {
				"ast": {
					"absolutePath": "donation.sol",
					"exportedSymbols": {
						"Context": [
							835
						],
						"GraceDonation": [
							1185
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IERC20Metadata": [
							341
						],
						"IGraceToken": [
							861
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							805
						]
					},
					"id": 1186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 316,
							"src": "61:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 342,
							"src": "119:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 806,
							"src": "196:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 148,
							"src": "263:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGraceToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "IGraceToken",
							"nameLocation": "329:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "357:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "370:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "362:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "382:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "374:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:28:9"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:0:9"
									},
									"scope": 861,
									"src": "348:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1186,
							"src": "319:83:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 862,
										"name": "Ownable",
										"nameLocations": [
											"432:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "432:7:9"
									},
									"id": 863,
									"nodeType": "InheritanceSpecifier",
									"src": "432:7:9"
								}
							],
							"canonicalName": "GraceDonation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1185,
							"linearizedBaseContracts": [
								1185,
								147,
								835
							],
							"name": "GraceDonation",
							"nameLocation": "415:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 867,
									"libraryName": {
										"id": 864,
										"name": "SafeERC20",
										"nameLocations": [
											"453:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "453:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "447:27:9",
									"typeName": {
										"id": 866,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 865,
											"name": "IERC20",
											"nameLocations": [
												"467:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "467:6:9"
										},
										"referencedDeclaration": 315,
										"src": "467:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 869,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "505:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "482:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 868,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:15:9",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e43c77d",
									"id": 872,
									"mutability": "mutable",
									"name": "graceToken",
									"nameLocation": "545:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "526:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IGraceToken_$861",
										"typeString": "contract IGraceToken"
									},
									"typeName": {
										"id": 871,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 870,
											"name": "IGraceToken",
											"nameLocations": [
												"526:11:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 861,
											"src": "526:11:9"
										},
										"referencedDeclaration": 861,
										"src": "526:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IGraceToken_$861",
											"typeString": "contract IGraceToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 875,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "576:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "562:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 874,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 873,
											"name": "IERC20",
											"nameLocations": [
												"562:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "562:6:9"
										},
										"referencedDeclaration": 315,
										"src": "562:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "14a8bd0d",
									"id": 878,
									"mutability": "constant",
									"name": "EXCHANGE_RATE",
									"nameLocation": "616:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "592:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 876,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "592:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31",
										"id": 877,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "632:9:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "00b37044",
									"id": 880,
									"mutability": "mutable",
									"name": "totalDonated",
									"nameLocation": "691:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "676:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 879,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e89e4ed6",
									"id": 904,
									"mutability": "mutable",
									"name": "milestones",
									"nameLocation": "814:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "797:189:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 881,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 882,
										"nodeType": "ArrayTypeName",
										"src": "797:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_1000000000_by_1",
													"typeString": "int_const 1000000000"
												},
												"id": 887,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "31303030",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"commonType": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "845:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "36",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "849:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "845:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													}
												},
												"src": "838:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000000000_by_1",
													"typeString": "int_const 1000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_5000000000_by_1",
													"typeString": "int_const 5000000000"
												},
												"id": 892,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "35303030",
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "882:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5000_by_1",
														"typeString": "int_const 5000"
													},
													"value": "5000"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"commonType": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "889:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "36",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "893:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "889:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													}
												},
												"src": "882:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5000000000_by_1",
													"typeString": "int_const 5000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_10000000000_by_1",
													"typeString": "int_const 10000000000"
												},
												"id": 897,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130303030",
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "917:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"commonType": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "925:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "36",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "929:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "925:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													}
												},
												"src": "917:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10000000000_by_1",
													"typeString": "int_const 10000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_50000000000_by_1",
													"typeString": "int_const 50000000000"
												},
												"id": 902,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3530303030",
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "953:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50000_by_1",
														"typeString": "int_const 50000"
													},
													"value": "50000"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"commonType": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "961:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "36",
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "965:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "961:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													}
												},
												"src": "953:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50000000000_by_1",
													"typeString": "int_const 50000000000"
												}
											}
										],
										"id": 903,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "827:159:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint40_$4_memory_ptr",
											"typeString": "uint40[4] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0304813",
									"id": 906,
									"mutability": "mutable",
									"name": "currentMilestone",
									"nameLocation": "1008:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "993:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 905,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "993:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9c9ad9270af0183a99bf47ee6beebcad2fc6ef1992082283d76ec94947158b51",
									"id": 916,
									"name": "DonatedPOL",
									"nameLocation": "1039:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "1066:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1050:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1081:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1073:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "graceMinted",
												"nameLocation": "1097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1089:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTotal",
												"nameLocation": "1118:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1110:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:78:9"
									},
									"src": "1033:95:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1ce55f2081708dbef7ac42c3785b4627ccd4aa19f21b694b54c92df3d146996a",
									"id": 926,
									"name": "DonatedUSDT",
									"nameLocation": "1140:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "1168:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1152:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1183:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1175:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"indexed": false,
												"mutability": "mutable",
												"name": "graceMinted",
												"nameLocation": "1199:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1191:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTotal",
												"nameLocation": "1220:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1212:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:78:9"
									},
									"src": "1134:96:9"
								},
								{
									"anonymous": false,
									"eventSelector": "e5f196b7c35531c9cdf28ee121967688b244c8557b574489a6182e8f66c929d3",
									"id": 932,
									"name": "MilestoneReached",
									"nameLocation": "1242:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "milestoneAmount",
												"nameLocation": "1267:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1259:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "milestoneIndex",
												"nameLocation": "1292:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1284:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:49:9"
									},
									"src": "1236:72:9"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1489:364:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 947,
																"name": "_treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1508:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1535:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1527:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 948,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1527:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1527:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1508:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792077616c6c6574",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																"typeString": "literal_string \"Invalid treasury wallet\""
															},
															"value": "Invalid treasury wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																"typeString": "literal_string \"Invalid treasury wallet\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1500:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1500:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 957,
																"name": "_graceToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "1584:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1607:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1599:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 958,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1599:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1599:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1584:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1611:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1576:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1576:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1576:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 967,
																"name": "_usdtToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "1654:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1668:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1668:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1668:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1654:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420555344542061646472657373",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
																"typeString": "literal_string \"Invalid USDT address\""
															},
															"value": "Invalid USDT address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
																"typeString": "literal_string \"Invalid USDT address\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1646:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "1646:57:9"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 976,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "1724:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 977,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "1741:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1724:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "1724:32:9"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 980,
														"name": "graceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1767:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IGraceToken_$861",
															"typeString": "contract IGraceToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 982,
																"name": "_graceToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "1792:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 981,
															"name": "IGraceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1780:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IGraceToken_$861_$",
																"typeString": "type(contract IGraceToken)"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1780:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IGraceToken_$861",
															"typeString": "contract IGraceToken"
														}
													},
													"src": "1767:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IGraceToken_$861",
														"typeString": "contract IGraceToken"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "1767:37:9"
											},
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "1815:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 988,
																"name": "_usdtToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "1834:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 987,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1827:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1815:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "1815:30:9"
											}
										]
									},
									"id": 993,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 943,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "1475:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 944,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 942,
												"name": "Ownable",
												"nameLocations": [
													"1467:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1467:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1467:21:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "1354:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1338:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1338:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_graceToken",
												"nameLocation": "1388:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1380:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_usdtToken",
												"nameLocation": "1418:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1410:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1447:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1439:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:139:9"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:0:9"
									},
									"scope": 1185,
									"src": "1316:537:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1899:672:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 997,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1918:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1922:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1918:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1918:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20646f6e6174696f6e206e6f7420616c6c6f776564",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1933:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a",
																"typeString": "literal_string \"Zero donation not allowed\""
															},
															"value": "Zero donation not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0fedd4f585ae1b1dc531c087b54fecc462f78ac2b5153537031481ce16dcc1a",
																"typeString": "literal_string \"Zero donation not allowed\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1910:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "1910:51:9"
											},
											{
												"assignments": [
													1005,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2016:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "2011:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2011:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1013,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2064:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1006,
																"name": "treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "2026:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2041:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2026:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1008,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2053:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2057:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2053:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2026:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2026:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2010:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2086:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4c207472616e73666572206661696c6564",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b",
																"typeString": "literal_string \"POL transfer failed\""
															},
															"value": "POL transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_73db6ac404eca6eb5c3f9aa9ae0c2f376cdc269e1b5a0a2961b39347a8fbdd7b",
																"typeString": "literal_string \"POL transfer failed\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2078:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "2078:36:9"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "graceAmount",
														"nameLocation": "2178:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "2170:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1021,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2193:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2197:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2193:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1023,
																	"name": "EXCHANGE_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "2205:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2193:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1025,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2192:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2222:7:9",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "2192:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1032,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2256:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2260:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2256:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "graceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2268:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1029,
															"name": "graceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2240:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGraceToken_$861",
																"typeString": "contract IGraceToken"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2251:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "2240:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2240:40:9"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "totalDonated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2370:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1038,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2386:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2390:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2386:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2398:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2402:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2398:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															}
														},
														"src": "2386:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2370:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2370:34:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1046,
														"name": "_checkMilestone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "2468:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2468:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "2468:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2514:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2518:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2514:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1052,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2526:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2530:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2526:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1054,
															"name": "graceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2537:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1055,
															"name": "totalDonated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2550:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1049,
														"name": "DonatedPOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2503:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "EmitStatement",
												"src": "2498:65:9"
											}
										]
									},
									"functionSelector": "f8d0bb6f",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donatePOL",
									"nameLocation": "1870:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:2:9"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:0:9"
									},
									"scope": 1185,
									"src": "1861:710:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "2624:575:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "2643:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2652:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2643:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2655:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2635:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2635:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2635:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2774:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2778:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2774:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2786:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1077,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "2802:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1071,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "2747:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2757:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "2747:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2747:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2747:62:9"
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "graceAmount",
														"nameLocation": "2876:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "2868:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1080,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2868:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1082,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "2891:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1083,
																	"name": "EXCHANGE_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "2900:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2891:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1085,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2890:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2918:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1090,
																							"name": "usdtToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 875,
																							"src": "2945:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$315",
																								"typeString": "contract IERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IERC20_$315",
																								"typeString": "contract IERC20"
																							}
																						],
																						"id": 1089,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2937:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1088,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2937:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2937:18:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1087,
																				"name": "IERC20Metadata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 341,
																				"src": "2922:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$341_$",
																					"typeString": "type(contract IERC20Metadata)"
																				}
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2922:34:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Metadata_$341",
																				"typeString": "contract IERC20Metadata"
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2957:8:9",
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 340,
																		"src": "2922:43:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2922:45:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2918:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2917:51:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2890:78:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2868:100:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2995:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2995:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "graceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3007:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1099,
															"name": "graceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2979:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGraceToken_$861",
																"typeString": "contract IGraceToken"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2990:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "2979:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2979:40:9"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "totalDonated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3065:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1108,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3081:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3065:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "3065:22:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1111,
														"name": "_checkMilestone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "3098:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3098:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "3098:17:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3145:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3149:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3145:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "3157:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1118,
															"name": "graceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3165:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1119,
															"name": "totalDonated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3178:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "DonatedUSDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3133:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "EmitStatement",
												"src": "3128:63:9"
											}
										]
									},
									"functionSelector": "5610eca0",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donateUSDT",
									"nameLocation": "2588:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2607:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2599:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2599:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:16:9"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2624:0:9"
									},
									"scope": 1185,
									"src": "2579:620:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "3283:107:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "newWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "3302:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3323:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3315:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1132,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3315:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3315:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3302:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3327:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3294:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "3294:51:9"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1140,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3356:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "newWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3373:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3356:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "3356:26:9"
											}
										]
									},
									"functionSelector": "809d458d",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"3273:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3273:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3273:9:9"
										}
									],
									"name": "updateTreasuryWallet",
									"nameLocation": "3216:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "3253:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "3237:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:27:9"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3283:0:9"
									},
									"scope": 1185,
									"src": "3207:183:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "3434:305:9",
										"statements": [
											{
												"body": {
													"id": 1181,
													"nodeType": "Block",
													"src": "3508:224:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "totalDonated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "3527:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1160,
																		"name": "milestones",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "3543:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1162,
																	"indexExpression": {
																		"id": 1161,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "3554:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3543:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3527:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1179,
																"nodeType": "Block",
																"src": "3681:40:9",
																"statements": [
																	{
																		"id": 1178,
																		"nodeType": "Break",
																		"src": "3700:5:9"
																	}
																]
															},
															"id": 1180,
															"nodeType": "IfStatement",
															"src": "3523:198:9",
															"trueBody": {
																"id": 1177,
																"nodeType": "Block",
																"src": "3558:117:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1164,
																				"name": "currentMilestone",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 906,
																				"src": "3577:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1165,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "3596:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3600:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3596:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3577:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1169,
																		"nodeType": "ExpressionStatement",
																		"src": "3577:24:9"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1171,
																						"name": "milestones",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 904,
																						"src": "3642:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																							"typeString": "uint256[] storage ref"
																						}
																					},
																					"id": 1173,
																					"indexExpression": {
																						"id": 1172,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1149,
																						"src": "3653:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3642:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1174,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "3657:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1170,
																				"name": "MilestoneReached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "3625:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3625:34:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1176,
																		"nodeType": "EmitStatement",
																		"src": "3620:39:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3480:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1153,
															"name": "milestones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3484:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3495:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3484:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3480:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"initializationExpression": {
													"assignments": [
														1149
													],
													"declarations": [
														{
															"constant": false,
															"id": 1149,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3458:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1182,
															"src": "3450:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1148,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3450:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1151,
													"initialValue": {
														"id": 1150,
														"name": "currentMilestone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3462:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3450:28:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3503:3:9",
														"subExpression": {
															"id": 1156,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3503:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1158,
													"nodeType": "ExpressionStatement",
													"src": "3503:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3445:287:9"
											}
										]
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkMilestone",
									"nameLocation": "3407:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3422:2:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3434:0:9"
									},
									"scope": 1185,
									"src": "3398:341:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1186,
							"src": "406:3596:9",
							"usedErrors": [
								13,
								18,
								353
							],
							"usedEvents": [
								24,
								916,
								926,
								932
							]
						}
					],
					"src": "33:3971:9"
				},
				"id": 9
			}
		}
	}
}